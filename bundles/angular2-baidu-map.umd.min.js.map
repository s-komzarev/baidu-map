{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular2-baidu-map/lib/types/Map.ts","ng://angular2-baidu-map/lib/providers/scriptLoader.ts","ng://angular2-baidu-map/lib/helpers/object.ts","ng://angular2-baidu-map/lib/helpers/transformer.ts","ng://angular2-baidu-map/lib/helpers/validate.ts","ng://angular2-baidu-map/lib/types/Control.ts","ng://angular2-baidu-map/lib/types/Animation.ts","ng://angular2-baidu-map/lib/providers/mapService.ts","ng://angular2-baidu-map/lib/components/control.component.ts","ng://angular2-baidu-map/lib/components/map.component.ts","ng://angular2-baidu-map/lib/components/marker.component.ts","ng://angular2-baidu-map/lib/components/polyline.component.ts","ng://angular2-baidu-map/lib/components/circle.component.ts","ng://angular2-baidu-map/lib/components/polygon.component.ts","ng://angular2-baidu-map/lib/components/heatmap.component.ts","ng://angular2-baidu-map/lib/components/tilelayer.component.ts","ng://angular2-baidu-map/lib/components/trafficlayer.component.ts","ng://angular2-baidu-map/lib/components/canvaslayer.component.ts","ng://angular2-baidu-map/lib/components/markerClusterer.component.ts","ng://angular2-baidu-map/lib/index.ts"],"names":["MapTypeEnum","LOADING_STATE","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isNull","obj","isUndefined","undefined","isBoolean","prototype","toString","call","isString","isMapTypeEnum","maptype","getTileLayer","toPoint","opts","window","BMap","Point","lng","lat","toPoints","map","p","toSize","Size","width","height","toIcon","url","size","options","Icon","iconOptions","anchor","imageOffset","infoWindowAnchor","printImageUrl","icon","imageSize","setImageSize","toTextIconStyle","style","realStyle","offset","textSize","textColor","createMarker","point","res","Marker","imageUrl","enableMassClear","enableDragging","enableClicking","raiseOnDrag","draggingCursor","rotation","title","shadow","toMarkerOptions","label","Label","content","styles","setStyle","setLabel","nullCheck","msg","Error","ScriptLoaderConfig","this","ak","ScriptLoader","_scriptLoadState","_loadingCallbacks","load","isMain","cb","scriptKey","scriptUrls","LOADED","switchDisplay","LOADING","push","baidumapinit","forEach","urls","leftObj","count","appendScriptTag","script","document","createElement","type","src","onerror","body","removeChild","setTimeout","onload","appendChild","appendScriptsTag","Injectable","selector","state","Array","slice","querySelectorAll","node","display","ControlAnchor","NavigationControlType","MapTypeControlType","LengthUnit","Animation","MapService","config","loader","_this","Promise","resolve","mapResolver","paramIndex","decorator","createMap","el","mapOptions","URL","Map","keys","_i","rawKeys","finalKeys","filter","k","indexOf","reduce","v","omit","setOptions","disableDragging","enableScrollWheelZoom","disableDoubleClickZoom","enableKeyboard","enableInertialDragging","enableAutoResize","enableContinuousZoom","disablePinchToZoom","then","cursor","setDefaultCursor","setDraggingCursor","currentCity","setCurrentCity","centerAndZoom","zoom","mapType","realType","setMapType","addOverlay","overlay","removeOverlay","addTileLayer","tilelayer","removeTileLayer","addControl","control","removeControl","getNativeMap","Inject","args","tslib_1.__param","ControlComponent","service","loaded","EventEmitter","ngOnInit","createControl","_a","emit","ngOnDestroy","NavigationControl","enableGeolocation","showZoomInfo","toNavigationControlOptions","OverviewMapControl","isOpen","toOverviewMapControlOptions","ScaleControl","toScaleControlOptions","MapTypeControl","mapTypes","toMapTypeControlOptions","GeolocationControl","enableAutoLocation","locationIcon","showAddressBar","toGeolocationOptions","PanoramaControl","tslib_1.__decorate","Input","Output","Directive","MapComponent","clicked","ngAfterViewInit","mapInstance","nativeElement","addListener","ngOnChanges","changes","currentValue","console","warn","log","addEventListener","e","ViewChild","static","Component","providers","template","MarkerComponent","marker","setPosition","isFirstChange","setOffset","setIcon","setRotation","setShadow","setTitle","PolylineComponent","points","polyline","Polyline","setPath","enableEditing","disableEditing","disableMassClear","strokeColor","setStrokeColor","strokeOpacity","setStrokeOpacity","strokeStyle","setStrokeStyle","strokeWeight","setStrokeWeight","CircleComponent","center","radius","circle","Circle","setCenter","setRadius","fillColor","setFillColor","fillOpacity","setFillOpacity","PolygonComponent","polygon","Polygon","HeatmapComponent","scriptLoader","dataset","heatmap","BMapLib","HeatmapOverlay","setDataSet","TileLayerComponent","func","getTilesUrl","TileLayer","tileCoord","TrafficLayerComponent","trafficlayer","TrafficLayer","CanvasLayerComponent","canvaslayer","CanvasLayer","getOptions","zIndex","paneName","update","canvas","LIB_URLS","scripts","MarkerClustererComponent","markerClusterer","MarkerClusterer","markers","m","girdSize","maxZoom","minClusterSize","isAverangeCenter","s","resetOptions","clearMarkers","addMarkers","setGridSize","setMaxZoom","setStyles","BaiduMapModule","forRoot","ngModule","BaiduMapModule_1","provide","useValue","NgModule","declarations","exports"],"mappings":";;;;;;;;;;;;;;oFA6BO,ICwGKA,ECjIAC,EFgDL,SAASC,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HC,EAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,EACrH,GAAuB,iBAAZQ,SAAoD,mBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIU,EAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,GAChJ,OAAOH,EAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,WGxDhDO,EAAOC,GACrB,OAAOA,MAAAA,EAGT,SAAgBC,EAAYD,GAC1B,YAAeE,IAARF,EAGT,SAAgBG,EAAUH,GACxB,MAA+C,qBAAxCP,OAAOW,UAAUC,SAASC,KAAKN,GAOxC,SAAgBO,EAASP,GACvB,MAA+C,oBAAxCP,OAAOW,UAAUC,SAASC,KAAKN,GF2HxC,SAAgBQ,EACdC,GAEA,OEnIyBT,EFmILS,EAAqBC,eElIM,sBAAxCjB,OAAOW,UAAUC,SAASC,KAAKN,IADxC,IAA2BA,WCUXW,EAAQC,GACtB,OAAKA,EAGE,IAAIC,OAAOC,KAAKC,MAAMH,EAAKI,IAAKJ,EAAKK,KAFnC,IAAIJ,OAAOC,KAAKC,MAK3B,SAAgBG,EAASN,GACvB,OAAKA,EAGEA,EAAKO,KAAI,SAAAC,GACd,OAAO,IAAIP,OAAOC,KAAKC,MAAMK,EAAEJ,IAAKI,EAAEH,QAH/B,GAOX,SAAgBI,EAAOT,GACrB,OAAKA,EAGE,IAAIC,OAAOC,KAAKQ,KAAKV,EAAKW,MAAOX,EAAKY,QAFpC,IAAIX,OAAOC,KAAKQ,KAK3B,SAAgBG,EAAOC,EAAaC,EAAYC,GAC9C,IAAKD,IAASC,EACZ,OAAO,IAAIf,OAAOC,KAAKe,KAAKH,GAE9B,IAAKC,EACH,OAAO,IAAId,OAAOC,KAAKe,KAAKH,EAAKL,EAAOM,IAE1C,IAAMG,EAAmB,CACvBC,OAAQV,EAAOO,EAAQG,QACvBC,YAAaX,EAAOO,EAAQI,aAC5BC,iBAAkBZ,EAAOO,EAAQK,kBACjCC,cAAeN,EAAQM,eAEnBC,EAAO,IAAItB,OAAOC,KAAKe,KAAKH,EAAKL,EAAOM,GAAOG,GAIrD,OAHIF,EAAQQ,WACVD,EAAKE,aAAahB,EAAOO,EAAQQ,YAE5BD,EAwJT,SAAgBG,EAAgBC,GAC9B,IAAMC,EAA4B,CAChCd,IAAKa,EAAMb,IACXC,KAAMN,EAAOkB,EAAMZ,OAerB,OAbIY,EAAMR,SACRS,EAAUT,OAASV,EAAOkB,EAAMR,SAE9BQ,EAAME,SACRD,EAAUC,OAASpB,EAAOkB,EAAME,SAE7B1C,EAAOwC,EAAMG,YAChBF,EAAUE,SAAWH,EAAMG,UAExB3C,EAAOwC,EAAMI,aAChBH,EAAUG,UAAYJ,EAAMI,WAGvBH,EAmCT,SAAgBI,EAAaC,EAAcjB,GACzC,IAAMkB,EAAM,IAAIjC,OAAOC,KAAKiC,OAAOpC,EAAQkC,GA3M7C,SAAgCjB,GAC9B,IAAMhB,EAAuB,GAE7B,OAAKgB,GAIDA,EAAQa,SACV7B,EAAK6B,OAASpB,EAAOO,EAAQa,SAG3Bb,EAAQO,OACVvB,EAAKuB,KAAOV,EAAOG,EAAQO,KAAKa,SAAUpB,EAAQO,KAAKR,KAAMC,EAAQO,OAElEpC,EAAO6B,EAAQqB,mBAClBrC,EAAKqC,gBAAkBrB,EAAQqB,iBAE5BlD,EAAO6B,EAAQsB,kBAClBtC,EAAKsC,eAAiBtB,EAAQsB,gBAE3BnD,EAAO6B,EAAQuB,kBAClBvC,EAAKuC,eAAiBvB,EAAQuB,gBAE3BpD,EAAO6B,EAAQwB,eAClBxC,EAAKwC,YAAcxB,EAAQwB,aAExBrD,EAAO6B,EAAQyB,kBAClBzC,EAAKyC,eAAiBzB,EAAQyB,gBAE3BtD,EAAO6B,EAAQ0B,YAClB1C,EAAK0C,SAAW1B,EAAQ0B,UAErBvD,EAAO6B,EAAQ2B,SAClB3C,EAAK2C,MAAQ3B,EAAQ2B,OAElBxD,EAAO6B,EAAQ4B,UAClB5C,EAAK4C,OAAS/B,EAAOG,EAAQ4B,OAAOR,SAAUpB,EAAQ4B,OAAO7B,KAAMC,EAAQ4B,SAGtE5C,GAnCEA,EAuM0C6C,CAAgB7B,IACnE,IAAK7B,EAAO6B,EAAQ8B,OAAQ,CAC1B,IAAMA,EAAQ,IAAI7C,OAAOC,KAAK6C,MAAM/B,EAAQ8B,MAAME,SAE9ChC,EAAQ8B,MAAMG,QAChBH,EAAMI,SAASlC,EAAQ8B,MAAMG,QAE/Bf,EAAIiB,SAASL,GAEf,OAAOZ,WCnROkB,EAAUhE,EAAUiE,GAClC,GAAIlE,EAAOC,GACT,MAAM,IAAIkE,MAAMD,IJiIRpF,EAAAA,EAAAA,cAAAA,EAAAA,YAAW,KACrB,gBAAA,kBACAA,EAAA,qBAAA,uBACAA,EAAA,mBAAA,qBACAA,EAAA,gBAAA,kBCrIF,SAAYC,GACVA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UAHF,CAAYA,IAAAA,EAAa,KAMzB,IAAAqF,EAAA,WACSC,KAAAC,GAAK,iBAKZ,SAAAC,IACEzD,OAAO0D,iBAAmB,GAC1B1D,OAAO2D,kBAAoB,GA0C/B,OAvCSF,EAAAlE,UAAAqE,KAAP,SACE/C,EACAgD,EACAC,QADA,IAAAD,IAAAA,GAAA,GAIA,IAAME,EAAYrE,EAASmB,GAAOA,EAAMA,EAAS,IAC3CmD,EAAatE,EAASmB,GAAO,CAACA,GAAOA,EAAa,QAGxD,GAAIb,OAAO0D,iBAAiBK,KAAe9F,EAAcgG,OAKvD,OAJIJ,IACFK,EAAc,gCAAiC,SAC/CA,EAAc,+BAAgC,SAEzCJ,IAEJ9D,OAAO2D,kBAAkBI,KAC5B/D,OAAO2D,kBAAkBI,GAAa,IAEpC/D,OAAO0D,iBAAiBK,KAAe9F,EAAckG,SAIzDnE,OAAO0D,iBAAiBK,GAAa9F,EAAckG,QACnDnE,OAAO2D,kBAAkBI,GAAWK,KAAKN,GAErCD,IACF7D,OAAOqE,aAAe,WACpBrE,OAAO0D,iBAAiBK,GAAa9F,EAAcgG,OACnDC,EAAc,gCAAiC,SAC/CA,EAAc,+BAAgC,QAC9ClE,OAAO2D,kBAAkBI,GAAWO,SAAQ,SAAC9F,GAC3CA,SAQV,SACEuF,EACAQ,EACAV,GAEA,IAAMW,EAAU,CACdC,MAAOF,EAAK7F,QAEd6F,EAAKD,SAAQ,SAAAzD,IAKf,SAAS6D,EACPX,EACAlD,EACAgD,EACAW,GAEA,IAAMG,EAASC,SAASC,cAAc,UACtCF,EAAOG,KAAO,kBACdH,EAAOI,IAAMlE,EACb8D,EAAOK,QAAU,WACXnB,IACFK,EAAc,+BAAgC,SAC9CA,EAAc,gCAAiC,SAEjDU,SAASK,KAAKC,YAAYP,GAE1BQ,YAAW,WACTT,EAAgBX,EAAWlD,EAAKgD,EAAQW,KACvC,MAGAX,IACHc,EAAOS,OAAS,WACdZ,EAAQC,QACJD,EAAQC,QAGZzE,OAAO0D,iBAAiBK,GAAa9F,EAAcgG,OACnDjE,OAAO2D,kBAAkBI,GAAWO,SAAQ,SAAC9F,GAC3CA,UAINoG,SAASK,KAAKI,YAAYV,GArCxBD,CAAgBX,EAAWlD,EAAKgD,EAAQW,MAbxCc,CAAiBvB,EAAWC,EAAYH,IAhBtC7D,OAAO2D,kBAAkBI,GAAWK,KAAKN,IA3BlCL,EAAYvF,EAAA,CADxBqH,EAAAA,cACY9B,MAgGb,SAASS,EAAcsB,EAAkBC,GACvCC,MAAMnG,UAAUoG,MACblG,KAAKmF,SAASgB,iBAAiBJ,IAC/BlB,SAAQ,SAACuB,GACRA,EAAKnE,MAAMoE,QAAUL,SIGfM,EAOAC,EAOAC,EAMAC,ECzIAC,eCmBV,SAAAC,EAC8BC,EACpBC,GAFV,IAAAC,EAAAhD,KAEUA,KAAA+C,OAAAA,EAERnD,EAAUkD,EAAO7C,GAAI,uBAErBD,KAAK8C,OAASA,EAEd9C,KAAKjD,IAAM,IAAIkG,SAAsB,SAACC,GACpCF,EAAKG,YAAcD,KR8BlB,IAAiBE,EAAYC,EQ2HpC,OArJSR,EAAA7G,UAAAsH,UAAP,SACEC,EACAC,GAFF,IAAAR,EAAAhD,KAIQyD,EAAM,0CAA0CzD,KAAK8C,OAAO7C,GAAE,yBAEpE,OAAO,IAAIgD,SAAQ,SAAAC,GACjBF,EAAKD,OAAO1C,KAAKoD,GAAK,GAAM,WAC1B,IAAM1G,EAAM,IAAIN,OAAOC,KAAKgH,IAAIH,ELjBxC,SAAwB3H,OAAQ,IAAA+H,EAAA,GAAAC,EAAA,EAAAA,EAAA1I,UAAAC,OAAAyI,IAAAD,EAAAC,EAAA,GAAA1I,UAAA0I,GAC9B,IAAMC,EAAUxI,OAAOsI,KAAK/H,GACtBkI,EAAYD,EAAQE,QAAO,SAAAC,GAAK,OAAAL,EAAKM,QAAQD,GAAK,KACxD,OAAOF,EAAUI,QACf,SAAClH,EAAGmH,GAEF,OADAnH,EAAEmH,GAAKvI,EAAIuI,GACJnH,IAET,IKSwCoH,CAAKZ,EAAY,YACrDR,EAAKqB,WAAWb,GAChBR,EAAKG,YAAYpG,GACjBmG,EAAQnG,UAKP8F,EAAA7G,UAAAqI,WAAP,SAAkB7H,GAEd,IAAA8H,EAAA9H,EAAA8H,gBACAC,EAAA/H,EAAA+H,sBACAC,EAAAhI,EAAAgI,uBACAC,EAAAjI,EAAAiI,eACAC,EAAAlI,EAAAkI,uBACAC,EAAAnI,EAAAmI,iBACAC,EAAApI,EAAAoI,qBACAC,EAAArI,EAAAqI,mBAGE9I,EAAUuI,IACZtE,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GAAKuH,EAAkB,UAAY,UAAY,iBAG/CvI,EAAUwI,IACZvE,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GACGwH,EAAwB,SAAW,WAAa,wBAInDxI,EAAU4I,IACZ3E,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GAAK4H,EAAmB,SAAW,WAAa,mBAGhD5I,EAAUyI,IACZxE,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GACGyH,EAAyB,UAAY,UAAY,wBAIpDzI,EAAU0I,IACZzE,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GAAK0H,EAAiB,SAAW,WAAa,iBAG9C1I,EAAU2I,IACZ1E,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GACG2H,EAAyB,SAAW,WAAa,yBAIpD3I,EAAU6I,IACZ5E,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GAAK6H,EAAuB,SAAW,WAAa,uBAGpD7I,EAAU8I,IACZ7E,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,OAAAA,GAAK8H,EAAqB,UAAY,UAAY,oBAGjDlJ,EAAOa,EAAKuI,SACf/E,KAAKjD,IAAI+H,MAAK,SAAA/H,GAAO,OAAAA,EAAIiI,iBAAiBxI,EAAKuI,WAE5CpJ,EAAOa,EAAKyC,iBACfe,KAAKjD,IAAI+H,MAAK,SAAA/H,GAAO,OAAAA,EAAIkI,kBAAkBzI,EAAKyC,mBAE7CtD,EAAOa,EAAK0I,cACflF,KAAKjD,IAAI+H,MAAK,SAAA/H,GAAO,OAAAA,EAAIoI,eAAe3I,EAAK0I,gBAE1CvJ,EAAOa,EAAK4I,gBACfpF,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZA,EAAIqI,cAAc7I,EAAQC,EAAK4I,eAAgB5I,EAAK4I,cAAcC,SAGjE1J,EAAOa,EAAK8I,UACftF,KAAKjD,IAAI+H,MAAK,SAAA/H,GACZ,IAAMwI,EAAWnJ,EAAcI,EAAK8I,SAChC7I,OAAOD,EAAK8I,SACZ9I,EAAK8I,QACTvI,EAAIyI,WAAWD,OAKd1C,EAAA7G,UAAAyJ,WAAP,SACElF,GAEA,OAAOP,KAAKjD,IAAI+H,MAAK,SAAC/H,GACpB,IAAM2I,EAAUnF,EAAGxD,GAEnB,OADAA,EAAI0I,WAAWC,GACR,CAAE3I,IAAGA,EAAE2I,QAAOA,OAIlB7C,EAAA7G,UAAA2J,cAAP,SAAqBD,GACnB,OAAO1F,KAAKjD,IAAI+H,MAAK,SAAC/H,GACpBA,EAAI4I,cAAcD,OAIf7C,EAAA7G,UAAA4J,aAAP,SACErF,GAEA,OAAOP,KAAKjD,IAAI+H,MAAK,SAAC/H,GACpB,IAAM8I,EAAYtF,EAAGxD,GAErB,OADAA,EAAI6I,aAAaC,GACV,CAAE9I,IAAGA,EAAE8I,UAASA,OAIpBhD,EAAA7G,UAAA8J,gBAAP,SAAuBD,GACrB,OAAO7F,KAAKjD,IAAI+H,MAAK,SAAC/H,GACpBA,EAAI4I,cAAcE,OAIfhD,EAAA7G,UAAA+J,WAAP,SACExF,GAEA,OAAOP,KAAKjD,IAAI+H,MAAK,SAAC/H,GACpB,IAAMiJ,EAAUzF,EAAGxD,GAEnB,OADAA,EAAIgJ,WAAWC,GACR,CAAEjJ,IAAGA,EAAEiJ,QAAOA,OAIlBnD,EAAA7G,UAAAiK,cAAP,SAAqBD,GACnB,OAAOhG,KAAKjD,IAAI+H,MAAK,SAAC/H,GACpBA,EAAIkJ,cAAcD,OAIfnD,EAAA7G,UAAAkK,aAAP,WACE,OAAOlG,KAAKjD,8CA/JwBgD,EAAkBnF,WAAA,CAAA,CAAA2G,KAArD4E,EAAAA,OAAMC,KAAA,CAACrG,YACQG,KARP2C,EAAUlI,EAAA,CADtBqH,EAAAA,cR8CuBoB,EQtCnBiD,ERsC+BhD,EQtC/B8C,EAAAA,OAAOpG,GRuCD,SAAUlF,EAAQC,GAAOuI,EAAUxI,EAAQC,EAAKsI,MQ9C9CP,mBCiBX,SAAAyD,EAAoBC,GAAAvG,KAAAuG,QAAAA,EAJFvG,KAAAwG,OAAS,IAAIC,EAAAA,aAmDjC,OA7CSH,EAAAtK,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEJ,EAAUI,KAAKuB,KAAM,kCAErBvB,KAAKuG,QACFR,YAAW,WAEV,OADA/C,EAAKgD,QAAUhD,EAAK2D,cAAc3D,EAAKzB,KAAMyB,EAAKxF,SAC3CwF,EAAKgD,WAEblB,MAAK,SAAC8B,OAAEZ,EAAAY,EAAAZ,QACPhD,EAAKwD,OAAOK,KAAKb,OAIhBM,EAAAtK,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQN,cAAcjG,KAAKgG,UAG1BM,EAAAtK,UAAA2K,cAAR,SACEpF,EACA/D,GAEA,GAAa,eAAT+D,EACF,OAAO,IAAI9E,OAAOC,KAAKqK,kBLoD7B,SAA2CvJ,GACzC,IAAMhB,EAAkC,GAExC,OAAKgB,GAIA7B,EAAO6B,EAAQG,UAClBnB,EAAKmB,OAASH,EAAQG,QAEnBhC,EAAO6B,EAAQwJ,qBAClBxK,EAAKwK,kBAAoBxJ,EAAQwJ,mBAE9BrL,EAAO6B,EAAQa,UAClB7B,EAAK6B,OAASpB,EAAOO,EAAQa,SAE1B1C,EAAO6B,EAAQyJ,gBAClBzK,EAAKyK,aAAezJ,EAAQyJ,cAGzBtL,EAAO6B,EAAQ+D,QAClB/E,EAAK+E,KAAO/D,EAAQ+D,MAEf/E,GAnBEA,EKvDH0K,CAA2B1J,IAG/B,GAAa,gBAAT+D,EACF,OAAO,IAAI9E,OAAOC,KAAKyK,mBLyE7B,SAA4C3J,GAC1C,IAAMhB,EAAmC,GAEzC,OAAKgB,GAIA7B,EAAO6B,EAAQG,UAClBnB,EAAKmB,OAASH,EAAQG,QAEnBhC,EAAO6B,EAAQ4J,UAClB5K,EAAK4K,OAAS5J,EAAQ4J,QAEnBzL,EAAO6B,EAAQa,UAClB7B,EAAK6B,OAASpB,EAAOO,EAAQa,SAE1B1C,EAAO6B,EAAQD,QAClBf,EAAKe,KAAON,EAAOO,EAAQD,OAEtBf,GAfEA,EK5EH6K,CAA4B7J,IAGhC,GAAa,UAAT+D,EACF,OAAO,IAAI9E,OAAOC,KAAK4K,aL0F7B,SAAsC9J,GACpC,IAAMhB,EAA6B,GAEnC,OAAKgB,GAIA7B,EAAO6B,EAAQG,UAClBnB,EAAKmB,OAASH,EAAQG,QAEnBhC,EAAO6B,EAAQa,UAClB7B,EAAK6B,OAASpB,EAAOO,EAAQa,SAExB7B,GATEA,EK9F+B+K,CAAsB/J,IAE5D,GAAa,YAAT+D,EACF,OAAO,IAAI9E,OAAOC,KAAK8K,eLuG7B,SAAwChK,GACtC,IAAMhB,EAA+B,GAErC,OAAKgB,GAIA7B,EAAO6B,EAAQ+D,QAClB/E,EAAK+E,KAAO/D,EAAQ+D,MAEjB5F,EAAO6B,EAAQiK,YAClBjL,EAAKiL,SAAWjK,EAAQiK,SAAS1K,KAAI,SAAAuI,GACnC,OAAOlJ,EAAckJ,GAAW7I,OAAO6I,GAAWA,MAG/C9I,GAXEA,EK3GiCkL,CAAwBlK,IAEhE,GAAa,gBAAT+D,EACF,OAAO,IAAI9E,OAAOC,KAAKiL,mBLsH7B,SAAqCnK,GACnC,IAAMhB,EAAmC,GAEzC,OAAKgB,GAIA7B,EAAO6B,EAAQG,UAClBnB,EAAKmB,OAASH,EAAQG,QAEnBhC,EAAO6B,EAAQa,UAClB7B,EAAK6B,OAASpB,EAAOO,EAAQa,SAE1B1C,EAAO6B,EAAQoK,sBAClBpL,EAAKoL,mBAAqBpK,EAAQoK,oBAE/BjM,EAAO6B,EAAQqK,gBAClBrL,EAAKqL,aAAexK,EAAOG,EAAQqK,aAAajJ,SAAUpB,EAAQqK,aAAatK,KAAMC,EAAQqK,eAE1FlM,EAAO6B,EAAQsK,kBAClBtL,EAAKsL,eAAiBtK,EAAQsK,gBAEzBtL,GAlBEA,EK1HqCuL,CAAqBvK,IAEjE,GAAa,aAAT+D,EACF,OAAO,IAAI9E,OAAOC,KAAKsL,gBAEzB,MAAM,IAAIlI,MAAM,oBAAoByB,EAAI,yDA7CbsB,KAPpBoF,EAAAA,CAARC,EAAAA,oCACQD,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCAJU7B,EAAgB3L,EAAA,CAH5ByN,EAAAA,UAAU,CACTnG,SAAU,aAECqE,mBC8CX,SAAA+B,EAAoB9B,GAAAvG,KAAAuG,QAAAA,EALFvG,KAAAwG,OAAS,IAAIC,EAAAA,aACbzG,KAAAsI,QAAU,IAAI7B,EAAAA,aA+ClC,OAzCE4B,EAAArM,UAAA0K,SAAA,aAIO2B,EAAArM,UAAAuM,gBAAP,WAAA,IAAAvF,EAAAhD,KACEJ,EAAUI,KAAKxC,QAAS,uCACxBoC,EACEI,KAAKxC,QAAQ4H,cACb,qDAGFpF,KAAKuG,QACFjD,UAAUtD,KAAKwI,YAAYC,cAAezI,KAAKxC,SAC/CsH,MAAK,SAAA/H,GAEJ,OADAiG,EAAKwD,OAAOK,KAAK9J,GACVA,KAER+H,MAAK,SAAA/H,GACJiG,EAAK0F,YAAY3L,OAIhBsL,EAAArM,UAAA2M,YAAP,SAAmBC,GACjB,IAAMpM,EAAOoM,EAAQpL,QAAQqL,aAC7B,IAAKrM,EACH,OAAOsM,QAAQC,KACb,mEAGJ/I,KAAKuG,QAAQlC,WAAW7H,IAGnB6L,EAAArM,UAAA8K,YAAP,WACEgC,QAAQE,IAAI,mBAGNX,EAAArM,UAAA0M,YAAR,SAAoB3L,GAApB,IAAAiG,EAAAhD,KACEjD,EAAIkM,iBAAiB,SAAS,SAACC,GAC7BlG,EAAKsF,QAAQzB,KAAKqC,gDAxCOrG,KAPpBoF,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCACSF,EAAAA,CAATE,EAAAA,wCAE4CF,EAAAA,CAA5CkB,EAAAA,UAAU,cAAe,CAAEC,QAAQ,uCAPzBf,EAAY1N,EAAA,CAzCxB0O,EAAAA,UAAU,CACTC,UAAW,CAACzG,GACZZ,SAAU,YA6BVsH,SAAU,sPA3BR,okBAqCSlB,mBCvBX,SAAAmB,EAAoBjD,GAAAvG,KAAAuG,QAAAA,EALFvG,KAAAwG,OAAS,IAAIC,EAAAA,aACbzG,KAAAsI,QAAU,IAAI7B,EAAAA,aAoFlC,OA9ES+C,EAAAxN,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEJ,EAAUI,KAAKvB,MAAO,kCAEtBuB,KAAKyJ,OAASjL,EAAawB,KAAKvB,MAAOuB,KAAKxC,SAE5CwC,KAAKuG,QACFd,YAAW,WACV,OAAOzC,EAAKyG,UAEb3E,MAAK,SAAC8B,OAAE7J,EAAA6J,EAAA7J,IACPiG,EAAKwD,OAAOK,KAAK7D,EAAKyG,QACtBzG,EAAK0F,YAAY1F,EAAKyG,OAAQ1M,MAE/B+H,MAAK,WAEJ9B,EAAKyG,OAAOC,YACV,IAAIjN,OAAOC,KAAKC,MAAMqG,EAAKvE,MAAM7B,IAAKoG,EAAKvE,MAAM5B,UAKlD2M,EAAAxN,UAAA2M,YAAP,SAAmBC,GACbA,EAAQnK,QAAUmK,EAAQnK,MAAMkL,iBAClC3J,KAAKyJ,OAAOC,YAAYnN,EAAQqM,EAAQnK,MAAMoK,eAE5CD,EAAQpL,UAAYoL,EAAQpL,QAAQmM,iBACtC3J,KAAKqE,WAAWuE,EAAQpL,QAAQqL,eAI7BW,EAAAxN,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQZ,cAAc3F,KAAKyJ,SAG1BD,EAAAxN,UAAAqI,WAAR,SAAmB7G,GACb7B,EAAO6B,KAGN7B,EAAO6B,EAAQa,SAClB2B,KAAKyJ,OAAOG,UAAU3M,EAAOO,EAAQa,SAElC1C,EAAO6B,EAAQO,OAClBiC,KAAKyJ,OAAOI,QACVxM,EAAOG,EAAQO,KAAKa,SAAUpB,EAAQO,KAAKR,KAAMC,EAAQO,OAGxDpC,EAAO6B,EAAQqB,kBAClBmB,KAAKyJ,QACFjM,EAAQqB,gBAAkB,SAAW,WAAa,eAGlDlD,EAAO6B,EAAQsB,iBAClBkB,KAAKyJ,QACFjM,EAAQsB,eAAiB,SAAW,WAAa,cAGjDnD,EAAO6B,EAAQ0B,WAClBc,KAAKyJ,OAAOK,YAAYtM,EAAQ0B,UAE7BvD,EAAO6B,EAAQ4B,SAClBY,KAAKyJ,OAAOM,UACV1M,EAAOG,EAAQ4B,OAAOR,SAAUpB,EAAQ4B,OAAO7B,KAAMC,EAAQ4B,SAG5DzD,EAAO6B,EAAQ2B,QAClBa,KAAKyJ,OAAOO,SAASxM,EAAQ2B,SAIzBqK,EAAAxN,UAAA0M,YAAR,SAAoBe,EAAiB1M,GAArC,IAAAiG,EAAAhD,KACEyJ,EAAOR,iBAAiB,SAAS,SAACC,GAChClG,EAAKsF,QAAQzB,KAAK,CAChBqC,EAACA,EACDnM,IAAGA,EACH0M,OAAMA,iDA5EiB5G,KARpBoF,EAAAA,CAARC,EAAAA,qCACQD,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCACSF,EAAAA,CAATE,EAAAA,wCALUqB,EAAe7O,EAAA,CAH3ByN,EAAAA,UAAU,CACTnG,SAAU,YAECuH,mBCGX,SAAAS,EAAoB1D,GAAAvG,KAAAuG,QAAAA,EALFvG,KAAAwG,OAAS,IAAIC,EAAAA,aACbzG,KAAAsI,QAAU,IAAI7B,EAAAA,aA6ElC,OAvESwD,EAAAjO,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEJ,EAAUI,KAAKkK,OAAQ,qCAEvBlK,KAAKuG,QACFd,YAAW,WACV,OAAQzC,EAAKmH,SAAW,IAAI1N,OAAOC,KAAK0N,SACtCtN,EAASkG,EAAKkH,QACdlH,EAAKxF,YAGRsH,MAAK,SAAC8B,OAAE7J,EAAA6J,EAAA7J,IACPiG,EAAKwD,OAAOK,KAAK7D,EAAKmH,UACtBnH,EAAK0F,YAAY1F,EAAKmH,SAAUpN,OAI/BkN,EAAAjO,UAAA2M,YAAP,SAAmBC,GACbA,EAAQsB,SAAWtB,EAAQsB,OAAOP,iBACpC3J,KAAKmK,SAASE,QAAQvN,EAAS8L,EAAQsB,OAAOrB,eAE5CD,EAAQpL,UAAYoL,EAAQpL,QAAQmM,iBACtC3J,KAAKqE,WAAWuE,EAAQpL,QAAQqL,eAI7BoB,EAAAjO,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQZ,cAAc3F,KAAKmK,WAG1BF,EAAAjO,UAAAqI,WAAR,SAAmB7G,GACb7B,EAAO6B,KAGN3B,EAAY2B,EAAQ8M,iBACnB9M,EAAQ8M,cACVtK,KAAKmK,SAASG,gBAEdtK,KAAKmK,SAASI,kBAGb1O,EAAY2B,EAAQqB,mBACnBrB,EAAQ8M,cACVtK,KAAKmK,SAAStL,kBAEdmB,KAAKmK,SAASK,oBAGb3O,EAAY2B,EAAQiN,cACvBzK,KAAKmK,SAASO,eAAelN,EAAQiN,aAElC5O,EAAY2B,EAAQmN,gBACvB3K,KAAKmK,SAASS,iBAAiBpN,EAAQmN,eAEpC9O,EAAY2B,EAAQqN,cACvB7K,KAAKmK,SAASW,eAAetN,EAAQqN,aAElChP,EAAY2B,EAAQuN,eACvB/K,KAAKmK,SAASa,gBAAgBxN,EAAQuN,gBAIlCd,EAAAjO,UAAA0M,YAAR,SAAoByB,EAAqBpN,GAAzC,IAAAiG,EAAAhD,KACEmK,EAASlB,iBAAiB,SAAS,SAACC,GAClCJ,QAAQE,IAAI,cACZhG,EAAKsF,QAAQzB,KAAK,CAChBqC,EAACA,EACDnM,IAAGA,EACHoN,SAAQA,iDArEetH,KARpBoF,EAAAA,CAARC,EAAAA,sCACQD,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCACSF,EAAAA,CAATE,EAAAA,wCALU8B,EAAiBtP,EAAA,CAH7ByN,EAAAA,UAAU,CACTnG,SAAU,cAECgI,mBCQX,SAAAgB,EAAoB1E,GAAAvG,KAAAuG,QAAAA,EAJFvG,KAAAwG,OAAS,IAAIC,EAAAA,aA4EjC,OAtESwE,EAAAjP,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEJ,EAAUI,KAAKkL,OAAQ,mCACvBtL,EAAUI,KAAKmL,OAAQ,mCAEvBnL,KAAKuG,QACFd,YAAW,WACV,OAAQzC,EAAKoI,OAAS,IAAI3O,OAAOC,KAAK2O,OACpC9O,EAAQyG,EAAKkI,QACblI,EAAKmI,OACLnI,EAAKxF,YAGRsH,MAAK,WACJ9B,EAAKwD,OAAOK,KAAK7D,EAAKoI,YAIrBH,EAAAjP,UAAA2M,YAAP,SAAmBC,GACbA,EAAQsC,SAAWtC,EAAQsC,OAAOvB,iBACpC3J,KAAKoL,OAAOE,UAAU/O,EAAQqM,EAAQsC,OAAOrC,eAE3CD,EAAQuC,SAAWvC,EAAQuC,OAAOxB,iBACpC3J,KAAKoL,OAAOG,UAAU3C,EAAQuC,OAAOtC,cAEnCD,EAAQpL,UAAYoL,EAAQpL,QAAQmM,iBACtC3J,KAAKqE,WAAWuE,EAAQpL,QAAQqL,eAI7BoC,EAAAjP,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQZ,cAAc3F,KAAKoL,SAG1BH,EAAAjP,UAAAqI,WAAR,SAAmB7G,GACb7B,EAAO6B,KAGN3B,EAAY2B,EAAQ8M,iBACnB9M,EAAQ8M,cACVtK,KAAKoL,OAAOd,gBAEZtK,KAAKoL,OAAOb,kBAGX1O,EAAY2B,EAAQqB,mBACnBrB,EAAQ8M,cACVtK,KAAKoL,OAAOvM,kBAEZmB,KAAKoL,OAAOZ,oBAGX3O,EAAY2B,EAAQiN,cACvBzK,KAAKoL,OAAOV,eAAelN,EAAQiN,aAEhC5O,EAAY2B,EAAQgO,YACvBxL,KAAKoL,OAAOK,aAAajO,EAAQgO,WAE9B3P,EAAY2B,EAAQmN,gBACvB3K,KAAKoL,OAAOR,iBAAiBpN,EAAQmN,eAElC9O,EAAY2B,EAAQkO,cACvB1L,KAAKoL,OAAOO,eAAenO,EAAQkO,aAEhC7P,EAAY2B,EAAQqN,cACvB7K,KAAKoL,OAAON,eAAetN,EAAQqN,aAEhChP,EAAY2B,EAAQuN,eACvB/K,KAAKoL,OAAOJ,gBAAgBxN,EAAQuN,yDArEXlI,KARpBoF,EAAAA,CAARC,EAAAA,sCACQD,EAAAA,CAARC,EAAAA,sCACQD,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCALU8C,EAAetQ,EAAA,CAH3ByN,EAAAA,UAAU,CACTnG,SAAU,YAECgJ,mBCQX,SAAAW,EAAoBrF,GAAAvG,KAAAuG,QAAAA,EAJFvG,KAAAwG,OAAS,IAAIC,EAAAA,aAuEjC,OAjESmF,EAAA5P,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEJ,EAAUI,KAAKkK,OAAQ,oCAEvBlK,KAAKuG,QACFd,YAAW,WACV,OAAQzC,EAAK6I,QAAU,IAAIpP,OAAOC,KAAKoP,QACrChP,EAASkG,EAAKkH,QACdlH,EAAKxF,YAGRsH,MAAK,WACJ9B,EAAKwD,OAAOK,KAAK7D,EAAK6I,aAIrBD,EAAA5P,UAAA2M,YAAP,SAAmBC,GACbA,EAAQsB,SAAWtB,EAAQsB,OAAOP,iBACpC3J,KAAK6L,QAAQxB,QAAQvN,EAAS8L,EAAQsB,OAAOrB,eAE3CD,EAAQpL,UAAYoL,EAAQpL,QAAQmM,iBACtC3J,KAAKqE,WAAWuE,EAAQpL,QAAQqL,eAI7B+C,EAAA5P,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQZ,cAAc3F,KAAK6L,UAG1BD,EAAA5P,UAAAqI,WAAR,SAAmB7G,GACb7B,EAAO6B,KAGN3B,EAAY2B,EAAQ8M,iBACnB9M,EAAQ8M,cACVtK,KAAK6L,QAAQvB,gBAEbtK,KAAK6L,QAAQtB,kBAGZ1O,EAAY2B,EAAQqB,mBACnBrB,EAAQ8M,cACVtK,KAAK6L,QAAQhN,kBAEbmB,KAAK6L,QAAQrB,oBAGZ3O,EAAY2B,EAAQiN,cACvBzK,KAAK6L,QAAQnB,eAAelN,EAAQiN,aAEjC5O,EAAY2B,EAAQgO,YACvBxL,KAAK6L,QAAQJ,aAAajO,EAAQgO,WAE/B3P,EAAY2B,EAAQmN,gBACvB3K,KAAK6L,QAAQjB,iBAAiBpN,EAAQmN,eAEnC9O,EAAY2B,EAAQkO,cACvB1L,KAAK6L,QAAQF,eAAenO,EAAQkO,aAEjC7P,EAAY2B,EAAQqN,cACvB7K,KAAK6L,QAAQf,eAAetN,EAAQqN,aAEjChP,EAAY2B,EAAQuN,eACvB/K,KAAK6L,QAAQb,gBAAgBxN,EAAQuN,yDAhEZlI,KAPpBoF,EAAAA,CAARC,EAAAA,sCACQD,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCAJUyD,EAAgBjR,EAAA,CAH5ByN,EAAAA,UAAU,CACTnG,SAAU,aAEC2J,MCAbG,EAAA,WAQE,SAAAA,EACUxF,EACAyF,GADAhM,KAAAuG,QAAAA,EACAvG,KAAAgM,aAAAA,EANQhM,KAAAwG,OAAS,IAAIC,EAAAA,aA0CjC,OAjCSsF,EAAA/P,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEJ,EAAUI,KAAKiM,QAAS,qCAExBjM,KAAKuG,QAAQL,eAAepB,MAAK,WAC/B,OAAO9B,EAAKgJ,aAAa3L,KAtBf,oEAsB6B,GAAO,WAC5C2C,EAAKuD,QACFd,YAAW,WACV,OAAQzC,EAAKkJ,QAAU,IAAIzP,OAAO0P,QAAQC,eACxCpJ,EAAKxF,YAGRsH,MAAK,WACJ9B,EAAKwD,OAAOK,KAAK7D,EAAKkJ,SAClBlJ,EAAKiJ,SACPjJ,EAAKkJ,QAAQG,WAAWrJ,EAAKiJ,mBAOlCF,EAAA/P,UAAA2M,YAAP,SAAmBC,GACbA,EAAQqD,UAAYrD,EAAQqD,QAAQtC,iBACtC3J,KAAKkM,QAAQG,WAAWzD,EAAQqD,QAAQpD,cAEtCD,EAAQpL,UAAYoL,EAAQpL,QAAQmM,iBACtC3J,KAAKkM,QAAQ7H,WAAWuE,EAAQpL,QAAQqL,eAIrCkD,EAAA/P,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQZ,cAAc3F,KAAKkM,mDAnCfrJ,SACK3C,KATf+H,EAAAA,CAARC,EAAAA,uCACQD,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCAJU4D,EAAgBpR,EAAA,CAH5ByN,EAAAA,UAAU,CACTnG,SAAU,aAEC8J,GAAb,gBCWE,SAAAO,EAAoB/F,GAAAvG,KAAAuG,QAAAA,EAJZvG,KAAAwG,OAAS,IAAIC,EAAAA,aA4BvB,OAtBS6F,EAAAtQ,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACQuM,EAAOvM,KAAKwM,YAElBxM,KAAKuG,QACFX,cAAa,WAQZ,OAPA5C,EAAK6C,UAAY,IAAIpJ,OAAOC,KAAK+P,UAAUzJ,EAAKxF,SAE5CwF,EAAKwJ,cACPxJ,EAAK6C,UAAU2G,YAAc,SAACE,EAAmBrH,GAC/C,OAAOkH,EAAKG,EAAWrH,KAGpBrC,EAAK6C,aAEbf,MAAK,WACJ9B,EAAKwD,OAAOK,KAAK7D,EAAK6C,eAIrByG,EAAAtQ,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQT,gBAAgB9F,KAAK6F,qDAtBPhD,KAV7BoF,EAAAA,CADCC,EAAAA,2CAIDD,EAAAA,CADCC,EAAAA,uCAIDD,EAAAA,CADCE,EAAAA,uCAPUmE,EAAkB3R,EAAA,CAH9ByN,EAAAA,UAAU,CACTnG,SAAU,eAECqK,mBCIX,SAAAK,EAAoBpG,GAAAvG,KAAAuG,QAAAA,EAJZvG,KAAAwG,OAAS,IAAIC,EAAAA,aAoBvB,OAdSkG,EAAA3Q,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEA,KAAKuG,QACFX,cAAa,WAEZ,OADA5C,EAAK4J,aAAe,IAAInQ,OAAOC,KAAKmQ,aAAa7J,EAAKxF,SAC/CwF,EAAK4J,gBAEb9H,MAAK,WACJ9B,EAAKwD,OAAOK,KAAK7D,EAAK4J,kBAIrBD,EAAA3Q,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQT,gBAAgB9F,KAAK4M,wDAdP/J,KAP7BoF,EAAAA,CADCC,EAAAA,uCAIDD,EAAAA,CADCE,EAAAA,uCAJUwE,EAAqBhS,EAAA,CAHjCyN,EAAAA,UAAU,CACTnG,SAAU,kBAEC0K,mBCeX,SAAAG,EAAoBvG,GAAAvG,KAAAuG,QAAAA,EAJZvG,KAAAwG,OAAS,IAAIC,EAAAA,aA8CvB,OAxCSqG,EAAA9Q,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEA,KAAKuG,QACFd,YAAW,SAAC1I,GAIX,OAHAiG,EAAK+J,YAAc,IAAItQ,OAAOC,KAAKsQ,YACjChK,EAAKiK,WAAWjK,EAAKxF,QAAST,IAEzBiG,EAAK+J,eAEbjI,MAAK,WACJ9B,EAAKwD,OAAOK,KAAK7D,EAAK+J,iBAIrBD,EAAA9Q,UAAA8K,YAAP,WACE9G,KAAKuG,QAAQZ,cAAc3F,KAAK+M,cAG1BD,EAAA9Q,UAAAiR,WAAR,SACEzP,EACAT,GAEA,GAAKS,EAAL,CAGA,IfpCqB5B,EeoCfY,EAA4B,GAclC,OflDqBZ,EesCR4B,EAAQ0P,OfrCwB,oBAAxC7R,OAAOW,UAAUC,SAASC,KAAKN,KesClCY,EAAK0Q,OAAS1P,EAAQ0P,QAEpB1P,EAAQ2P,WACV3Q,EAAK2Q,SAAW3P,EAAQ2P,UAEtB3P,EAAQ4P,SACV5Q,EAAK4Q,OAAS,WACZ,OAAO5P,EAAQ4P,OAAOrQ,EAAKiD,KAAKqN,UAI7B7Q,6CAxCoBqG,KAP7BoF,EAAAA,CADCC,EAAAA,uCAIDD,EAAAA,CADCE,EAAAA,uCAJU2E,EAAoBnS,EAAA,CAHhCyN,EAAAA,UAAU,CACTnG,SAAU,iBAEC6K,MCOPQ,EAAW,CACfxS,IAAK,kBACLyS,QAAS,CACP,mFACA,qFAOJC,EAAA,WAOE,SAAAA,EACUjH,EACAyF,GADAhM,KAAAuG,QAAAA,EACAvG,KAAAgM,aAAAA,EANQhM,KAAAwG,OAAS,IAAIC,EAAAA,aAwDjC,OA/CS+G,EAAAxR,UAAA0K,SAAP,WAAA,IAAA1D,EAAAhD,KACEJ,EAAUI,KAAKxC,QAAS,8CAExBwC,KAAKuG,QAAQL,eAAepB,MAAK,SAAC/H,GAChC,OAAOiG,EAAKgJ,aAAa3L,KAAKiN,GAAU,GAAO,WfoLrD,IAAyC9P,EACjChB,EepLAwG,EAAKyK,gBAAkB,IAAIhR,OAAO0P,QAAQuB,gBACxC3Q,GfkL+BS,EejLNwF,EAAKxF,QfkLhChB,EAAgC,GAEjCgB,GAIDA,EAAQmQ,UACVnR,EAAKmR,QAAUnQ,EAAQmQ,QAAQ5Q,KAC7B,SAAA6Q,GAAK,OAAApP,EAAaoP,EAAEnP,MAAOmP,EAAEpQ,aAI5B7B,EAAO6B,EAAQqQ,YAClBrR,EAAKqR,SAAWrQ,EAAQqQ,UAErBlS,EAAO6B,EAAQsQ,WAClBtR,EAAKsR,QAAUtQ,EAAQsQ,SAEpBnS,EAAO6B,EAAQuQ,kBAClBvR,EAAKuR,eAAiBvQ,EAAQuQ,gBAE3BpS,EAAO6B,EAAQwQ,oBAClBxR,EAAKwR,iBAAmBxQ,EAAQwQ,kBAE9BxQ,EAAQiC,SACVjD,EAAKiD,OAASjC,EAAQiC,OAAOsE,QAAO,SAAAkK,GAAK,OAAAA,KAAGlR,KAAI,SAAAkR,GAAK,OAAA/P,EAAgB+P,OAGhEzR,GAzBEA,IelLHwG,EAAKwD,OAAOK,KAAK7D,EAAKyK,wBAKrBD,EAAAxR,UAAA2M,YAAP,SAAmBC,GACbA,EAAQpL,UAAYoL,EAAQpL,QAAQmM,iBACtC3J,KAAKkO,aAAatF,EAAQpL,QAAQqL,eAI9B2E,EAAAxR,UAAAkS,aAAR,SAAqB1Q,GACfA,EAAQmQ,UACV3N,KAAKyN,gBAAgBU,eACrBnO,KAAKyN,gBAAgBW,WACnB5Q,EAAQmQ,QAAQ5Q,KACd,SAAA6Q,GACE,OAAApP,EAAaoP,EAAEnP,MAAOmP,EAAEpQ,cAI3B3B,EAAY2B,EAAQqQ,WACvB7N,KAAKyN,gBAAgBY,YAAY7Q,EAAQqQ,UAEtChS,EAAY2B,EAAQsQ,UACvB9N,KAAKyN,gBAAgBa,WAAW9Q,EAAQsQ,SAEtCtQ,EAAQiC,QACVO,KAAKyN,gBAAgBc,UACnB/Q,EAAQiC,OAAOsE,QAAO,SAAAkK,GAAK,OAAAA,KAAGlR,KAAI,SAAAkR,GAAK,OAAA/P,EAAgB+P,QAKtDT,EAAAxR,UAAA8K,YAAP,WACE9G,KAAKyN,gBAAgBU,yDAjDJtL,SACK3C,KARf+H,EAAAA,CAARC,EAAAA,uCAESD,EAAAA,CAATE,EAAAA,uCAHUqF,EAAwB7S,EAAA,CAHpCyN,EAAAA,UAAU,CACTnG,SAAU,sBAECuL,GAAb,Ib+EYhL,EAAAA,EAAAA,gBAAAA,EAAAA,cAAa,KACvBA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,wBAAA,GAAA,0BACAA,EAAAA,EAAA,yBAAA,GAAA,4BAGUC,EAAAA,EAAAA,wBAAAA,EAAAA,sBAAqB,KAC/BA,EAAA,8BAAA,GAAA,gCACAA,EAAAA,EAAA,8BAAA,GAAA,gCACAA,EAAAA,EAAA,4BAAA,GAAA,8BACAA,EAAAA,EAAA,6BAAA,GAAA,gCAGUC,EAAAA,EAAAA,qBAAAA,EAAAA,mBAAkB,KAC5BA,EAAA,gCAAA,GAAA,kCACAA,EAAAA,EAAA,8BAAA,GAAA,gCACAA,EAAAA,EAAA,yBAAA,GAAA,4BAGUC,EAAAA,EAAAA,aAAAA,EAAAA,WAAU,KACpB,iBAAA,SACAA,EAAA,mBAAA,MC3IUC,EAAAA,EAAAA,YAAAA,EAAAA,UAAS,KACjBA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,sBAAA,GAAA,yCa+CJ,SAAA4L,WAUA,SAVaA,EACGA,EAAAC,QAAd,SAAsB3L,GACpB,MAAO,CACL4L,SAAUC,EACVrF,UAAW,CACT,CAAEsF,QAAS7O,EAAoB8O,SAAU/L,GACzC5C,KANKsO,EAAcG,EAAAhU,EAAA,CA5B1BmU,EAAAA,SAAS,CACRC,aAAc,CACZ1G,EACAmB,EACAlD,EACA2D,EACAgB,EACAW,EACAG,EACAO,EACAK,EACAG,EACAU,GAEFwB,QAAS,CACP3G,EACAmB,EACAlD,EACA2D,EACAgB,EACAW,EACAG,EACAO,EACAK,EACAG,EACAU,MAGSgB","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { BBounds } from './Bounds'\r\nimport { BControl } from './Control'\r\nimport { Overlay } from './Overlay'\r\nimport { BPoint, Point } from './Point'\r\nimport { BTileLayer } from './TileLayer'\r\nimport { isFunction } from '../helpers/object'\r\nimport { BSize } from './Size'\r\nimport { BInfoWindow } from './InfoWindow'\r\nimport { BMapType } from './MapType'\r\nimport { BPixel } from './Pixel'\r\n\r\nexport interface BMapConstructor {\r\n  new (el: HTMLElement | string, opts: MapOptions): BMapInstance\r\n}\r\n\r\nexport interface BMapInstance {\r\n  disableDragging(): void\r\n  enableDragging(): void\r\n\r\n  disableScrollWheelZoom(): void\r\n  enableScrollWheelZoom(): void\r\n\r\n  disableDoubleClickZoom(): void\r\n  enableDoubleClickZoom(): void\r\n\r\n  disableKeyboard(): void\r\n  enableKeyboard(): void\r\n\r\n  disableInertialDragging(): void\r\n  enableInertialDragging(): void\r\n\r\n  disableContinuousZoom(): void\r\n  enableContinuousZoom(): void\r\n\r\n  disablePinchToZoom(): void\r\n  enablePinchToZoom(): void\r\n\r\n  disableAutoResize(): void\r\n  enableAutoResize(): void\r\n\r\n  addControl(control: BControl): void\r\n  removeControl(control: BControl): void\r\n\r\n  addOverlay(control: Overlay): void\r\n  removeOverlay(control: Overlay): void\r\n  clearOverlays(): void\r\n\r\n  addTileLayer(tileLayer: BTileLayer): void\r\n  removeTileLayer(tileLayer: BTileLayer): void\r\n\r\n  setDefaultCursor(cursor: string): void\r\n  getDefaultCursor(): string\r\n\r\n  setDraggingCursor(draggingCursor: string): void\r\n  getDraggingCursor(): string\r\n\r\n  setMinZoom(zoom: number): void\r\n  setMaxZoom(zoom: number): void\r\n\r\n  getBounds(): BBounds\r\n\r\n  setCenter(center: BPoint | string): void\r\n  getCenter(): BPoint\r\n\r\n  getDistance(start: BPoint, end: BPoint): number\r\n\r\n  setCurrentCity(city: string): void\r\n  centerAndZoom(center: BPoint, zoom: number): void\r\n\r\n  setMapType(mapType: BMapType | MapTypeEnum): void\r\n  getMapType(): BMapType\r\n\r\n  getSize(): BSize\r\n\r\n  setZoom(zoom: number): void\r\n  getZoom(): number\r\n\r\n  panTo(center: BPoint, opts: BPanOptions): void\r\n\r\n  panBy(x: number, y: number, opts: BPanOptions): void\r\n\r\n  reset(): void\r\n\r\n  highResolutionEnabled(): boolean\r\n\r\n  zoomIn(): void\r\n  zoomOut(): void\r\n\r\n  getContainer(): HTMLElement\r\n\r\n  closeInfoWindow(): void\r\n\r\n  pixelToPoint(pixel: BPixel): BPoint\r\n\r\n  pointToPixel(point: BPoint): BPixel\r\n\r\n  openInfoWindow(infoWnd: BInfoWindow, point: BPoint): void\r\n\r\n  addEventListener(event: string, handler: (e: any) => void): void\r\n  removeEventListener(event: string, handler: () => void): void\r\n}\r\n\r\nexport interface MapOptions {\r\n  minZoom?: number\r\n  maxZoom?: number\r\n  enableHighResolution?: boolean\r\n  enableAutoResize?: boolean\r\n  enableMapClick?: boolean\r\n\r\n  disableDragging?: boolean\r\n  enableScrollWheelZoom?: boolean\r\n  disableDoubleClickZoom?: boolean\r\n  enableKeyboard?: boolean\r\n  enableInertialDragging?: boolean\r\n  enableContinuousZoom?: boolean\r\n  disablePinchToZoom?: boolean\r\n\r\n  cursor?: string\r\n  draggingCursor?: string\r\n  currentCity?: string\r\n  centerAndZoom?: CenterAndZoom\r\n\r\n  mapType?: BMapType | MapTypeEnum\r\n}\r\n\r\nexport interface CenterAndZoom extends Point {\r\n  zoom?: number\r\n}\r\n\r\nexport interface BPanOptions {\r\n  noAnimation: boolean\r\n}\r\n\r\nexport enum MapTypeEnum {\r\n  BMAP_NORMAL_MAP = 'BMAP_NORMAL_MAP',\r\n  BMAP_PERSPECTIVE_MAP = 'BMAP_PERSPECTIVE_MAP',\r\n  BMAP_SATELLITE_MAP = 'BMAP_SATELLITE_MAP',\r\n  BMAP_HYBRID_MAP = 'BMAP_HYBRID_MAP'\r\n}\r\n\r\nexport function isMapTypeEnum(\r\n  maptype: MapTypeEnum | BMapType\r\n): maptype is MapTypeEnum {\r\n  return !isFunction((maptype as BMapType).getTileLayer)\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { isString } from '../helpers/object'\r\nimport { ScriptType } from '../types/Script'\r\n\r\nexport enum LOADING_STATE {\r\n  NON = 0,\r\n  LOADED = 1,\r\n  LOADING = 2\r\n}\r\n\r\nexport class ScriptLoaderConfig {\r\n  public ak = ''\r\n}\r\n\r\n@Injectable()\r\nexport class ScriptLoader {\r\n  constructor() {\r\n    window._scriptLoadState = {}\r\n    window._loadingCallbacks = {}\r\n  }\r\n\r\n  public load(\r\n    url: string | ScriptType,\r\n    isMain: boolean = false,\r\n    cb: () => void\r\n  ): void {\r\n    // tslint:disable: no-string-literal\r\n    const scriptKey = isString(url) ? url : url['key']\r\n    const scriptUrls = isString(url) ? [url] : url['scripts']\r\n    // tslint:enable: no-string-literal\r\n\r\n    if (window._scriptLoadState[scriptKey] === LOADING_STATE.LOADED) {\r\n      if (isMain) {\r\n        switchDisplay('baidu-map .baidu-map-instance', 'block')\r\n        switchDisplay('baidu-map .baidu-map-offline', 'none')\r\n      }\r\n      return cb()\r\n    }\r\n    if (!window._loadingCallbacks[scriptKey]) {\r\n      window._loadingCallbacks[scriptKey] = []\r\n    }\r\n    if (window._scriptLoadState[scriptKey] === LOADING_STATE.LOADING) {\r\n      window._loadingCallbacks[scriptKey].push(cb)\r\n      return\r\n    }\r\n    window._scriptLoadState[scriptKey] = LOADING_STATE.LOADING\r\n    window._loadingCallbacks[scriptKey].push(cb)\r\n\r\n    if (isMain) {\r\n      window.baidumapinit = () => {\r\n        window._scriptLoadState[scriptKey] = LOADING_STATE.LOADED\r\n        switchDisplay('baidu-map .baidu-map-instance', 'block')\r\n        switchDisplay('baidu-map .baidu-map-offline', 'none')\r\n        window._loadingCallbacks[scriptKey].forEach((c: () => void) => {\r\n          c()\r\n        })\r\n      }\r\n    }\r\n    appendScriptsTag(scriptKey, scriptUrls, isMain)\r\n  }\r\n}\r\n\r\nfunction appendScriptsTag(\r\n  scriptKey: string,\r\n  urls: Array<string>,\r\n  isMain: boolean\r\n) {\r\n  const leftObj = {\r\n    count: urls.length\r\n  }\r\n  urls.forEach(url => {\r\n    appendScriptTag(scriptKey, url, isMain, leftObj)\r\n  })\r\n}\r\n\r\nfunction appendScriptTag(\r\n  scriptKey: string,\r\n  url: string,\r\n  isMain: boolean,\r\n  leftObj: { count: number }\r\n) {\r\n  const script = document.createElement('script')\r\n  script.type = 'text/javascript'\r\n  script.src = url\r\n  script.onerror = () => {\r\n    if (isMain) {\r\n      switchDisplay('baidu-map .baidu-map-offline', 'block')\r\n      switchDisplay('baidu-map .baidu-map-instance', 'none')\r\n    }\r\n    document.body.removeChild(script)\r\n\r\n    setTimeout(() => {\r\n      appendScriptTag(scriptKey, url, isMain, leftObj)\r\n    }, 30000)\r\n  }\r\n\r\n  if (!isMain) {\r\n    script.onload = () => {\r\n      leftObj.count--\r\n      if (leftObj.count) {\r\n        return\r\n      }\r\n      window._scriptLoadState[scriptKey] = LOADING_STATE.LOADED\r\n      window._loadingCallbacks[scriptKey].forEach((c: () => void) => {\r\n        c()\r\n      })\r\n    }\r\n  }\r\n  document.body.appendChild(script)\r\n}\r\n\r\nfunction switchDisplay(selector: string, state: string) {\r\n  Array.prototype.slice\r\n    .call(document.querySelectorAll(selector))\r\n    .forEach((node: HTMLElement) => {\r\n      node.style.display = state\r\n    })\r\n}\r\n","export function isNull(obj: any) {\r\n  return obj === null || obj === undefined\r\n}\r\n\r\nexport function isUndefined(obj: any) {\r\n  return obj === undefined\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return Object.prototype.toString.call(obj) === '[object Boolean]'\r\n}\r\n\r\nexport function isFunction(obj: any): obj is boolean {\r\n  return Object.prototype.toString.call(obj) === '[object Function]'\r\n}\r\n\r\nexport function isString(obj: any): obj is boolean {\r\n  return Object.prototype.toString.call(obj) === '[object String]'\r\n}\r\n\r\nexport function isNumber(obj: any): obj is boolean {\r\n  return Object.prototype.toString.call(obj) === '[object Number]'\r\n}\r\n\r\nexport function omit<T>(obj: T, ...keys: Array<string>): T {\r\n  const rawKeys = Object.keys(obj)\r\n  const finalKeys = rawKeys.filter(k => keys.indexOf(k) < 0)\r\n  return finalKeys.reduce(\r\n    (p, v) => {\r\n      p[v] = obj[v]\r\n      return p\r\n    },\r\n    {} as T\r\n  )\r\n}\r\n","import {\r\n  BGeolocationControlOptions,\r\n  BMapTypeControlOptions,\r\n  BNavigationControlOptions,\r\n  BOverviewMapControlOptions,\r\n  BScaleControlOptions,\r\n  GeolocationControlOptions,\r\n  MapTypeControlOptions,\r\n  NavigationControlOptions,\r\n  OverviewMapControlOptions,\r\n  ScaleControlOptions\r\n} from '../types/Control'\r\nimport { BIcon, IconOptions } from '../types/Icon'\r\nimport { BMarker, BMarkerOptions, MarkerOptions } from '../types/Marker'\r\nimport { BPoint, Point } from '../types/Point'\r\nimport { BSize, Size } from '../types/Size'\r\nimport { isMapTypeEnum } from '../types/Map'\r\n\r\nimport { isNull } from './object'\r\nimport { BMarkerClustererOptions, MarkerClustererOptions } from '../types/MarkerClusterer'\r\nimport { TextIconStyle, BTextIconStyle } from '../types/TextIconOverlay'\r\n\r\nexport function toPoint(opts: Point): BPoint {\r\n  if (!opts) {\r\n    return new window.BMap.Point()\r\n  }\r\n  return new window.BMap.Point(opts.lng, opts.lat)\r\n}\r\n\r\nexport function toPoints(opts: Array<Point>): Array<BPoint> {\r\n  if (!opts) {\r\n    return []\r\n  }\r\n  return opts.map(p => {\r\n    return new window.BMap.Point(p.lng, p.lat)\r\n  })\r\n}\r\n\r\nexport function toSize(opts: Size): BSize {\r\n  if (!opts) {\r\n    return new window.BMap.Size()\r\n  }\r\n  return new window.BMap.Size(opts.width, opts.height)\r\n}\r\n\r\nexport function toIcon(url: string, size: Size, options: IconOptions): BIcon {\r\n  if (!size && !options) {\r\n    return new window.BMap.Icon(url)\r\n  }\r\n  if (!size) {\r\n    return new window.BMap.Icon(url, toSize(size))\r\n  }\r\n  const iconOptions: any = {\r\n    anchor: toSize(options.anchor),\r\n    imageOffset: toSize(options.imageOffset),\r\n    infoWindowAnchor: toSize(options.infoWindowAnchor),\r\n    printImageUrl: options.printImageUrl\r\n  }\r\n  const icon = new window.BMap.Icon(url, toSize(size), iconOptions)\r\n  if (options.imageSize) {\r\n    icon.setImageSize(toSize(options.imageSize))\r\n  }\r\n  return icon\r\n}\r\n\r\nexport function toMarkerOptions(options: MarkerOptions): BMarkerOptions {\r\n  const opts: BMarkerOptions = {}\r\n\r\n  if (!options) {\r\n    return opts\r\n  }\r\n\r\n  if (options.offset) {\r\n    opts.offset = toSize(options.offset)\r\n  }\r\n\r\n  if (options.icon) {\r\n    opts.icon = toIcon(options.icon.imageUrl, options.icon.size, options.icon)\r\n  }\r\n  if (!isNull(options.enableMassClear)) {\r\n    opts.enableMassClear = options.enableMassClear\r\n  }\r\n  if (!isNull(options.enableDragging)) {\r\n    opts.enableDragging = options.enableDragging\r\n  }\r\n  if (!isNull(options.enableClicking)) {\r\n    opts.enableClicking = options.enableClicking\r\n  }\r\n  if (!isNull(options.raiseOnDrag)) {\r\n    opts.raiseOnDrag = options.raiseOnDrag\r\n  }\r\n  if (!isNull(options.draggingCursor)) {\r\n    opts.draggingCursor = options.draggingCursor\r\n  }\r\n  if (!isNull(options.rotation)) {\r\n    opts.rotation = options.rotation\r\n  }\r\n  if (!isNull(options.title)) {\r\n    opts.title = options.title\r\n  }\r\n  if (!isNull(options.shadow)) {\r\n    opts.shadow = toIcon(options.shadow.imageUrl, options.shadow.size, options.shadow)\r\n  }\r\n\r\n  return opts\r\n}\r\n\r\nexport function toNavigationControlOptions(options: NavigationControlOptions): BNavigationControlOptions {\r\n  const opts: BNavigationControlOptions = {}\r\n\r\n  if (!options) {\r\n    return opts\r\n  }\r\n\r\n  if (!isNull(options.anchor)) {\r\n    opts.anchor = options.anchor\r\n  }\r\n  if (!isNull(options.enableGeolocation)) {\r\n    opts.enableGeolocation = options.enableGeolocation\r\n  }\r\n  if (!isNull(options.offset)) {\r\n    opts.offset = toSize(options.offset)\r\n  }\r\n  if (!isNull(options.showZoomInfo)) {\r\n    opts.showZoomInfo = options.showZoomInfo\r\n  }\r\n\r\n  if (!isNull(options.type)) {\r\n    opts.type = options.type\r\n  }\r\n  return opts\r\n}\r\n\r\nexport function toOverviewMapControlOptions(options: OverviewMapControlOptions): BOverviewMapControlOptions {\r\n  const opts: BOverviewMapControlOptions = {}\r\n\r\n  if (!options) {\r\n    return opts\r\n  }\r\n\r\n  if (!isNull(options.anchor)) {\r\n    opts.anchor = options.anchor\r\n  }\r\n  if (!isNull(options.isOpen)) {\r\n    opts.isOpen = options.isOpen\r\n  }\r\n  if (!isNull(options.offset)) {\r\n    opts.offset = toSize(options.offset)\r\n  }\r\n  if (!isNull(options.size)) {\r\n    opts.size = toSize(options.size)\r\n  }\r\n  return opts\r\n}\r\n\r\nexport function toScaleControlOptions(options: ScaleControlOptions): BScaleControlOptions {\r\n  const opts: BScaleControlOptions = {}\r\n\r\n  if (!options) {\r\n    return opts\r\n  }\r\n\r\n  if (!isNull(options.anchor)) {\r\n    opts.anchor = options.anchor\r\n  }\r\n  if (!isNull(options.offset)) {\r\n    opts.offset = toSize(options.offset)\r\n  }\r\n  return opts\r\n}\r\n\r\nexport function toMapTypeControlOptions(options: MapTypeControlOptions): BMapTypeControlOptions {\r\n  const opts: BMapTypeControlOptions = {}\r\n\r\n  if (!options) {\r\n    return opts\r\n  }\r\n\r\n  if (!isNull(options.type)) {\r\n    opts.type = options.type\r\n  }\r\n  if (!isNull(options.mapTypes)) {\r\n    opts.mapTypes = options.mapTypes.map(mapType => {\r\n      return isMapTypeEnum(mapType) ? window[mapType] : mapType\r\n    })\r\n  }\r\n  return opts\r\n}\r\n\r\nexport function toGeolocationOptions(options: GeolocationControlOptions): BGeolocationControlOptions {\r\n  const opts: BGeolocationControlOptions = {}\r\n\r\n  if (!options) {\r\n    return opts\r\n  }\r\n\r\n  if (!isNull(options.anchor)) {\r\n    opts.anchor = options.anchor\r\n  }\r\n  if (!isNull(options.offset)) {\r\n    opts.offset = toSize(options.offset)\r\n  }\r\n  if (!isNull(options.enableAutoLocation)) {\r\n    opts.enableAutoLocation = options.enableAutoLocation\r\n  }\r\n  if (!isNull(options.locationIcon)) {\r\n    opts.locationIcon = toIcon(options.locationIcon.imageUrl, options.locationIcon.size, options.locationIcon)\r\n  }\r\n  if (!isNull(options.showAddressBar)) {\r\n    opts.showAddressBar = options.showAddressBar\r\n  }\r\n  return opts\r\n}\r\n\r\nexport function toTextIconStyle(style: TextIconStyle): BTextIconStyle {\r\n  const realStyle: BTextIconStyle = {\r\n    url: style.url,\r\n    size: toSize(style.size)\r\n  }\r\n  if (style.anchor) {\r\n    realStyle.anchor = toSize(style.anchor)\r\n  }\r\n  if (style.offset) {\r\n    realStyle.offset = toSize(style.offset)\r\n  }\r\n  if (!isNull(style.textSize)) {\r\n    realStyle.textSize = style.textSize\r\n  }\r\n  if (!isNull(style.textColor)) {\r\n    realStyle.textColor = style.textColor\r\n  }\r\n\r\n  return realStyle\r\n}\r\n\r\nexport function toMarkerClustererOptions(options: MarkerClustererOptions): BMarkerClustererOptions {\r\n  const opts: BMarkerClustererOptions = {}\r\n\r\n  if (!options) {\r\n    return opts\r\n  }\r\n\r\n  if (options.markers) {\r\n    opts.markers = options.markers.map(\r\n      m => createMarker(m.point, m.options)\r\n    )\r\n  }\r\n\r\n  if (!isNull(options.girdSize)) {\r\n    opts.girdSize = options.girdSize\r\n  }\r\n  if (!isNull(options.maxZoom)) {\r\n    opts.maxZoom = options.maxZoom\r\n  }\r\n  if (!isNull(options.minClusterSize)) {\r\n    opts.minClusterSize = options.minClusterSize\r\n  }\r\n  if (!isNull(options.isAverangeCenter)) {\r\n    opts.isAverangeCenter = options.isAverangeCenter\r\n  }\r\n  if (options.styles) {\r\n    opts.styles = options.styles.filter(s => s).map(s => toTextIconStyle(s))\r\n  }\r\n\r\n  return opts\r\n}\r\n\r\nexport function createMarker(point: Point, options: MarkerOptions): BMarker {\r\n  const res = new window.BMap.Marker(toPoint(point), toMarkerOptions(options));\r\n  if (!isNull(options.label)) {\r\n    const label = new window.BMap.Label(options.label.content);\r\n\r\n    if (options.label.styles) {\r\n      label.setStyle(options.label.styles)\r\n    }\r\n    res.setLabel(label)\r\n  }\r\n  return res;\r\n}\r\n","import { isNull } from './object'\r\n\r\nexport function nullCheck(obj: any, msg: string) {\r\n  if (isNull(obj)) {\r\n    throw new Error(msg)\r\n  }\r\n}\r\n","import { BIcon, Icon } from './Icon'\r\nimport { BSize, Size } from './Size'\r\nimport { BMapType } from './MapType'\r\nimport { MapTypeEnum } from './Map'\r\n\r\nexport interface BControlConstructor {\r\n  new (opts: any): BControl\r\n}\r\n\r\nexport interface BControl {}\r\n\r\nexport interface BNavigationControlConstructor extends BControlConstructor {\r\n  new (opts: BNavigationControlOptions): BNavigationControl\r\n}\r\n\r\nexport interface BOverviewMapControlConstructor extends BControlConstructor {\r\n  new (opts: BOverviewMapControlOptions): BOverviewMapControl\r\n}\r\n\r\nexport interface BScaleControlConstructor extends BControlConstructor {\r\n  new (opts: BScaleControlOptions): BScaleControl\r\n}\r\n\r\nexport interface BMapTypeControlConstructor extends BControlConstructor {\r\n  new (opts: BMapTypeControlOptions): BMapTypeControl\r\n}\r\n\r\nexport interface BGeolocationConstructor extends BControlConstructor {\r\n  new (opts: BGeolocationControlOptions): BGeolocationControl\r\n}\r\n\r\nexport interface BPanoramaControlConstructor extends BControlConstructor {\r\n  new (): BPanoramaControlControl\r\n}\r\n\r\nexport interface BNavigationControl extends BControl {\r\n  getType(): NavigationControlType\r\n  setType(type: NavigationControlType): void\r\n}\r\n\r\nexport interface BOverviewMapControl extends BControl {\r\n  changeView(): void\r\n  setSize(size: BSize): void\r\n  getSize(): BSize\r\n}\r\n\r\nexport interface BScaleControl extends BControl {\r\n  getUnit(): LengthUnit\r\n  setUnit(unit: LengthUnit): void\r\n}\r\n\r\nexport interface BMapTypeControl extends BControl {}\r\n\r\nexport interface BGeolocationControl extends BControl {\r\n  location(): void\r\n  getAddressComponent(): AddressComponent\r\n}\r\n\r\nexport interface BPanoramaControlControl extends BControl {}\r\n\r\nexport interface ControlOptions {\r\n  anchor?: ControlAnchor\r\n  offset?: Size\r\n}\r\n\r\nexport interface BControlOptions {\r\n  anchor?: ControlAnchor\r\n  offset?: BSize\r\n}\r\n\r\nexport interface NavigationControlOptions extends ControlOptions {\r\n  type?: NavigationControlType\r\n  showZoomInfo?: boolean\r\n  enableGeolocation?: boolean\r\n}\r\n\r\nexport interface BNavigationControlOptions extends BControlOptions {\r\n  type?: NavigationControlType\r\n  showZoomInfo?: boolean\r\n  enableGeolocation?: boolean\r\n}\r\n\r\nexport interface OverviewMapControlOptions extends ControlOptions {\r\n  size?: Size\r\n  isOpen?: boolean\r\n}\r\n\r\nexport interface BOverviewMapControlOptions extends BControlOptions {\r\n  size?: BSize\r\n  isOpen?: boolean\r\n}\r\n\r\nexport interface ScaleControlOptions extends ControlOptions {}\r\n\r\nexport interface BScaleControlOptions extends BControlOptions {}\r\n\r\nexport interface MapTypeControlOptions {\r\n  type?: MapTypeControlType\r\n  mapTypes?: Array<BMapType | MapTypeEnum>\r\n}\r\n\r\nexport interface BMapTypeControlOptions {\r\n  type?: MapTypeControlType\r\n  mapTypes?: Array<BMapType | any>\r\n}\r\n\r\nexport interface GeolocationControlOptions extends ControlOptions {\r\n  showAddressBar?: boolean\r\n  enableAutoLocation?: boolean\r\n  locationIcon?: Icon\r\n}\r\n\r\nexport interface BGeolocationControlOptions extends BControlOptions {\r\n  showAddressBar?: boolean\r\n  enableAutoLocation?: boolean\r\n  locationIcon?: BIcon\r\n}\r\n\r\nexport enum ControlAnchor {\r\n  BMAP_ANCHOR_TOP_LEFT = 0,\r\n  BMAP_ANCHOR_TOP_RIGHT = 1,\r\n  BMAP_ANCHOR_BOTTOM_LEFT = 2,\r\n  BMAP_ANCHOR_BOTTOM_RIGHT = 3\r\n}\r\n\r\nexport enum NavigationControlType {\r\n  BMAP_NAVIGATION_CONTROL_LARGE = 0,\r\n  BMAP_NAVIGATION_CONTROL_SMALL = 1,\r\n  BMAP_NAVIGATION_CONTROL_PAN = 2,\r\n  BMAP_NAVIGATION_CONTROL_ZOOM = 3\r\n}\r\n\r\nexport enum MapTypeControlType {\r\n  BMAP_MAPTYPE_CONTROL_HORIZONTAL = 0,\r\n  BMAP_MAPTYPE_CONTROL_DROPDOWN = 1,\r\n  BMAP_MAPTYPE_CONTROL_MAP = 2\r\n}\r\n\r\nexport enum LengthUnit {\r\n  BMAP_UNIT_METRIC = 'metric',\r\n  BMAP_UNIT_IMPERIAL = 'us'\r\n}\r\n\r\nexport interface AddressComponent {\r\n  streetNumber: string\r\n  street: string\r\n  district: string\r\n  city: string\r\n  province: string\r\n}\r\n\r\nexport type ControlType = 'navigation' | 'overviewmap' | 'scale' | 'maptype' | 'geolocation' | 'panorama'\r\n","\r\nexport enum Animation {\r\n    BMAP_ANIMATION_DROP = 1,\r\n    BMAP_ANIMATION_BOUNCE = 2,\r\n  }\r\n","import { Injectable, Inject } from '@angular/core'\r\nimport { isBoolean, isNull, omit } from '../helpers/object'\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { BControl } from '../types/Control'\r\nimport { ScriptLoaderConfig } from './scriptLoader'\r\nimport { BMapInstance, MapOptions, isMapTypeEnum } from '../types/Map'\r\nimport { Overlay } from '../types/Overlay'\r\nimport { BTileLayer } from '../types/TileLayer'\r\n\r\nimport { toPoint } from '../helpers/transformer'\r\n\r\nimport { ScriptLoader } from './scriptLoader'\r\n\r\n@Injectable()\r\nexport class MapService {\r\n  private config: ScriptLoaderConfig\r\n\r\n  private map: Promise<BMapInstance>\r\n  private mapResolver: (value: BMapInstance) => void\r\n\r\n  constructor(\r\n    @Inject(ScriptLoaderConfig) config: ScriptLoaderConfig,\r\n    private loader: ScriptLoader\r\n  ) {\r\n    nullCheck(config.ak, 'ak must be provided')\r\n\r\n    this.config = config\r\n\r\n    this.map = new Promise<BMapInstance>((resolve: () => void) => {\r\n      this.mapResolver = resolve\r\n    })\r\n  }\r\n\r\n  public createMap(\r\n    el: HTMLElement,\r\n    mapOptions: MapOptions\r\n  ): Promise<BMapInstance> {\r\n    const URL = `https://api.map.baidu.com/api?v=2.0&ak=${this.config.ak}&callback=baidumapinit`\r\n\r\n    return new Promise(resolve => {\r\n      this.loader.load(URL, true, () => {\r\n        const map = new window.BMap.Map(el, omit(mapOptions, 'mapType'))\r\n        this.setOptions(mapOptions)\r\n        this.mapResolver(map)\r\n        resolve(map)\r\n      })\r\n    })\r\n  }\r\n\r\n  public setOptions(opts: MapOptions): void {\r\n    const {\r\n      disableDragging,\r\n      enableScrollWheelZoom,\r\n      disableDoubleClickZoom,\r\n      enableKeyboard,\r\n      enableInertialDragging,\r\n      enableAutoResize,\r\n      enableContinuousZoom,\r\n      disablePinchToZoom\r\n    } = opts\r\n\r\n    if (isBoolean(disableDragging)) {\r\n      this.map.then(map =>\r\n        map[(disableDragging ? 'disable' : 'enable') + 'Dragging']()\r\n      )\r\n    }\r\n    if (isBoolean(enableScrollWheelZoom)) {\r\n      this.map.then(map =>\r\n        map[\r\n          (enableScrollWheelZoom ? 'enable' : 'disable') + 'ScrollWheelZoom'\r\n        ]()\r\n      )\r\n    }\r\n    if (isBoolean(enableAutoResize)) {\r\n      this.map.then(map =>\r\n        map[(enableAutoResize ? 'enable' : 'disable') + 'AutoResize']()\r\n      )\r\n    }\r\n    if (isBoolean(disableDoubleClickZoom)) {\r\n      this.map.then(map =>\r\n        map[\r\n          (disableDoubleClickZoom ? 'disable' : 'enable') + 'DoubleClickZoom'\r\n        ]()\r\n      )\r\n    }\r\n    if (isBoolean(enableKeyboard)) {\r\n      this.map.then(map =>\r\n        map[(enableKeyboard ? 'enable' : 'disable') + 'Keyboard']()\r\n      )\r\n    }\r\n    if (isBoolean(enableInertialDragging)) {\r\n      this.map.then(map =>\r\n        map[\r\n          (enableInertialDragging ? 'enable' : 'disable') + 'InertialDragging'\r\n        ]()\r\n      )\r\n    }\r\n    if (isBoolean(enableContinuousZoom)) {\r\n      this.map.then(map =>\r\n        map[(enableContinuousZoom ? 'enable' : 'disable') + 'ContinuousZoom']()\r\n      )\r\n    }\r\n    if (isBoolean(disablePinchToZoom)) {\r\n      this.map.then(map =>\r\n        map[(disablePinchToZoom ? 'disable' : 'enable') + 'PinchToZoom']()\r\n      )\r\n    }\r\n    if (!isNull(opts.cursor)) {\r\n      this.map.then(map => map.setDefaultCursor(opts.cursor))\r\n    }\r\n    if (!isNull(opts.draggingCursor)) {\r\n      this.map.then(map => map.setDraggingCursor(opts.draggingCursor))\r\n    }\r\n    if (!isNull(opts.currentCity)) {\r\n      this.map.then(map => map.setCurrentCity(opts.currentCity))\r\n    }\r\n    if (!isNull(opts.centerAndZoom)) {\r\n      this.map.then(map => {\r\n        map.centerAndZoom(toPoint(opts.centerAndZoom), opts.centerAndZoom.zoom)\r\n      })\r\n    }\r\n    if (!isNull(opts.mapType)) {\r\n      this.map.then(map => {\r\n        const realType = isMapTypeEnum(opts.mapType)\r\n          ? window[opts.mapType]\r\n          : opts.mapType\r\n        map.setMapType(realType)\r\n      })\r\n    }\r\n  }\r\n\r\n  public addOverlay(\r\n    cb: (map: BMapInstance) => Overlay\r\n  ): Promise<{ map: BMapInstance; overlay: Overlay }> {\r\n    return this.map.then((map: BMapInstance) => {\r\n      const overlay = cb(map)\r\n      map.addOverlay(overlay)\r\n      return { map, overlay }\r\n    })\r\n  }\r\n\r\n  public removeOverlay(overlay: Overlay): Promise<void> {\r\n    return this.map.then((map: BMapInstance) => {\r\n      map.removeOverlay(overlay)\r\n    })\r\n  }\r\n\r\n  public addTileLayer(\r\n    cb: (map: BMapInstance) => BTileLayer\r\n  ): Promise<{ map: BMapInstance; tilelayer: BTileLayer }> {\r\n    return this.map.then((map: BMapInstance) => {\r\n      const tilelayer = cb(map)\r\n      map.addTileLayer(tilelayer)\r\n      return { map, tilelayer }\r\n    })\r\n  }\r\n\r\n  public removeTileLayer(tilelayer: BTileLayer): Promise<void> {\r\n    return this.map.then((map: BMapInstance) => {\r\n      map.removeOverlay(tilelayer)\r\n    })\r\n  }\r\n\r\n  public addControl(\r\n    cb: (map: BMapInstance) => BControl\r\n  ): Promise<{ map: BMapInstance; control: BControl }> {\r\n    return this.map.then((map: BMapInstance) => {\r\n      const control = cb(map)\r\n      map.addControl(control)\r\n      return { map, control }\r\n    })\r\n  }\r\n\r\n  public removeControl(control: BControl): Promise<void> {\r\n    return this.map.then((map: BMapInstance) => {\r\n      map.removeControl(control)\r\n    })\r\n  }\r\n\r\n  public getNativeMap(): Promise<BMapInstance> {\r\n    return this.map\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit\r\n} from '@angular/core'\r\n\r\nimport {\r\n  toGeolocationOptions,\r\n  toMapTypeControlOptions,\r\n  toNavigationControlOptions,\r\n  toOverviewMapControlOptions,\r\n  toScaleControlOptions\r\n} from '../helpers/transformer'\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { MapService } from '../providers/mapService'\r\nimport { BControl, ControlType } from '../types/Control'\r\n\r\n@Directive({\r\n  selector: 'control'\r\n})\r\nexport class ControlComponent implements OnInit, OnDestroy {\r\n  @Input() private type: ControlType\r\n  @Input() private options: { [key: string]: any }\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n\r\n  private control: BControl\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  public ngOnInit() {\r\n    nullCheck(this.type, 'type is required for <control>')\r\n\r\n    this.service\r\n      .addControl(() => {\r\n        this.control = this.createControl(this.type, this.options)\r\n        return this.control\r\n      })\r\n      .then(({ control }) => {\r\n        this.loaded.emit(control)\r\n      })\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeControl(this.control)\r\n  }\r\n\r\n  private createControl(\r\n    type: ControlType,\r\n    options: { [key: string]: any }\r\n  ): BControl {\r\n    if (type === 'navigation') {\r\n      return new window.BMap.NavigationControl(\r\n        toNavigationControlOptions(options)\r\n      )\r\n    }\r\n    if (type === 'overviewmap') {\r\n      return new window.BMap.OverviewMapControl(\r\n        toOverviewMapControlOptions(options)\r\n      )\r\n    }\r\n    if (type === 'scale') {\r\n      return new window.BMap.ScaleControl(toScaleControlOptions(options))\r\n    }\r\n    if (type === 'maptype') {\r\n      return new window.BMap.MapTypeControl(toMapTypeControlOptions(options))\r\n    }\r\n    if (type === 'geolocation') {\r\n      return new window.BMap.GeolocationControl(toGeolocationOptions(options))\r\n    }\r\n    if (type === 'panorama') {\r\n      return new window.BMap.PanoramaControl()\r\n    }\r\n    throw new Error(`Unsupported type:${type} of control`)\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n  Output,\r\n  SimpleChange,\r\n  ViewChild\r\n} from '@angular/core'\r\n\r\nimport { MapService } from '../providers/mapService'\r\nimport { BMapInstance, MapOptions } from '../types/Map'\r\n\r\nimport { nullCheck } from '../helpers/validate'\r\n\r\n@Component({\r\n  providers: [MapService],\r\n  selector: 'baidu-map',\r\n  styles: [\r\n    `\r\n      .baidu-map-instance {\r\n        width: 100%;\r\n        height: 100%;\r\n        display: none;\r\n      }\r\n      .baidu-map-offline {\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: #e6e6e6;\r\n        position: relative;\r\n        display: none;\r\n      }\r\n      .baidu-map-offline label {\r\n        fontsize: 30px;\r\n        margin: 0;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin-right: -50%;\r\n        transform: translate(-50%, -50%);\r\n      }\r\n      .tranclude-content {\r\n        display: none;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <div #mapinstance class=\"baidu-map-instance\"></div>\r\n    <div class=\"baidu-map-offline\">\r\n      <label>{{ 'NO_NETWORK' }}</label>\r\n    </div>\r\n    <div class=\"tranclude-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class MapComponent\r\n  implements OnInit, AfterViewInit, OnDestroy, OnChanges {\r\n  @Input() private options: MapOptions\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n  @Output() private clicked = new EventEmitter()\r\n\r\n  @ViewChild('mapinstance', { static: false }) private mapInstance: ElementRef\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  ngOnInit(): void {\r\n    // do nothing\r\n  }\r\n\r\n  public ngAfterViewInit() {\r\n    nullCheck(this.options, 'options is required for <baidu-map>')\r\n    nullCheck(\r\n      this.options.centerAndZoom,\r\n      'options.centerAndZoom is required for <baidu-map>'\r\n    )\r\n\r\n    this.service\r\n      .createMap(this.mapInstance.nativeElement, this.options)\r\n      .then(map => {\r\n        this.loaded.emit(map)\r\n        return map\r\n      })\r\n      .then(map => {\r\n        this.addListener(map)\r\n      })\r\n  }\r\n\r\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    const opts = changes.options.currentValue as MapOptions\r\n    if (!opts) {\r\n      return console.warn(\r\n        'MapOptions change was ignored since you are passing empty value'\r\n      )\r\n    }\r\n    this.service.setOptions(opts)\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    console.log('on map destroy')\r\n  }\r\n\r\n  private addListener(map: BMapInstance) {\r\n    map.addEventListener('click', (e: any) => {\r\n      this.clicked.emit(e)\r\n    })\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange\r\n} from '@angular/core'\r\n\r\nimport { isNull } from '../helpers/object'\r\nimport {\r\n  createMarker,\r\n  toIcon,\r\n  toMarkerOptions,\r\n  toPoint,\r\n  toSize\r\n} from '../helpers/transformer'\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { MapService } from '../providers/mapService'\r\nimport { BMapInstance } from '../types/Map'\r\nimport { BMarker, MarkerOptions } from '../types/Marker'\r\nimport { Point } from '../types/Point'\r\n\r\n@Directive({\r\n  selector: 'marker'\r\n})\r\nexport class MarkerComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() private point: Point\r\n  @Input() private options: MarkerOptions\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n  @Output() private clicked = new EventEmitter()\r\n\r\n  private marker: BMarker\r\n\r\n  constructor(private service: MapService) { }\r\n\r\n  public ngOnInit() {\r\n    nullCheck(this.point, 'point is required for <marker>')\r\n\r\n    this.marker = createMarker(this.point, this.options);\r\n\r\n    this.service\r\n      .addOverlay(() => {\r\n        return this.marker;\r\n      })\r\n      .then(({ map }) => {\r\n        this.loaded.emit(this.marker)\r\n        this.addListener(this.marker, map)\r\n      })\r\n      .then(() => {\r\n        // workaround: it's weird that postion is set while constructing phase will make click event not working\r\n        this.marker.setPosition(\r\n          new window.BMap.Point(this.point.lng, this.point.lat)\r\n        )\r\n      })\r\n  }\r\n\r\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes.point && !changes.point.isFirstChange()) {\r\n      this.marker.setPosition(toPoint(changes.point.currentValue))\r\n    }\r\n    if (changes.options && !changes.options.isFirstChange()) {\r\n      this.setOptions(changes.options.currentValue)\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeOverlay(this.marker)\r\n  }\r\n\r\n  private setOptions(options: MarkerOptions): void {\r\n    if (isNull(options)) {\r\n      return\r\n    }\r\n    if (!isNull(options.offset)) {\r\n      this.marker.setOffset(toSize(options.offset))\r\n    }\r\n    if (!isNull(options.icon)) {\r\n      this.marker.setIcon(\r\n        toIcon(options.icon.imageUrl, options.icon.size, options.icon)\r\n      )\r\n    }\r\n    if (!isNull(options.enableMassClear)) {\r\n      this.marker[\r\n        (options.enableMassClear ? 'enable' : 'disable') + 'MassClear'\r\n      ]()\r\n    }\r\n    if (!isNull(options.enableDragging)) {\r\n      this.marker[\r\n        (options.enableDragging ? 'enable' : 'disable') + 'Dragging'\r\n      ]()\r\n    }\r\n    if (!isNull(options.rotation)) {\r\n      this.marker.setRotation(options.rotation)\r\n    }\r\n    if (!isNull(options.shadow)) {\r\n      this.marker.setShadow(\r\n        toIcon(options.shadow.imageUrl, options.shadow.size, options.shadow)\r\n      )\r\n    }\r\n    if (!isNull(options.title)) {\r\n      this.marker.setTitle(options.title)\r\n    }\r\n  }\r\n\r\n  private addListener(marker: BMarker, map: BMapInstance) {\r\n    marker.addEventListener('click', (e: any) => {\r\n      this.clicked.emit({\r\n        e,\r\n        map,\r\n        marker\r\n      })\r\n    })\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange\r\n} from '@angular/core'\r\n\r\nimport { isNull, isUndefined } from '../helpers/object'\r\nimport { toPoints } from '../helpers/transformer'\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { MapService } from '../providers/mapService'\r\nimport { BMapInstance } from '../types/Map'\r\nimport { BPolyline, PolylineOptions } from '../types/Polyline'\r\nimport { Point } from '../types/Point'\r\n\r\n@Directive({\r\n  selector: 'polyline'\r\n})\r\nexport class PolylineComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() private points: Array<Point>\r\n  @Input() private options: PolylineOptions\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n  @Output() private clicked = new EventEmitter()\r\n\r\n  private polyline: BPolyline\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  public ngOnInit() {\r\n    nullCheck(this.points, 'points is required for <polyline>')\r\n\r\n    this.service\r\n      .addOverlay(() => {\r\n        return (this.polyline = new window.BMap.Polyline(\r\n          toPoints(this.points),\r\n          this.options\r\n        ))\r\n      })\r\n      .then(({ map }) => {\r\n        this.loaded.emit(this.polyline)\r\n        this.addListener(this.polyline, map)\r\n      })\r\n  }\r\n\r\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes.points && !changes.points.isFirstChange()) {\r\n      this.polyline.setPath(toPoints(changes.points.currentValue))\r\n    }\r\n    if (changes.options && !changes.options.isFirstChange()) {\r\n      this.setOptions(changes.options.currentValue)\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeOverlay(this.polyline)\r\n  }\r\n\r\n  private setOptions(options: PolylineOptions): void {\r\n    if (isNull(options)) {\r\n      return\r\n    }\r\n    if (!isUndefined(options.enableEditing)) {\r\n      if (options.enableEditing) {\r\n        this.polyline.enableEditing()\r\n      } else {\r\n        this.polyline.disableEditing()\r\n      }\r\n    }\r\n    if (!isUndefined(options.enableMassClear)) {\r\n      if (options.enableEditing) {\r\n        this.polyline.enableMassClear()\r\n      } else {\r\n        this.polyline.disableMassClear()\r\n      }\r\n    }\r\n    if (!isUndefined(options.strokeColor)) {\r\n      this.polyline.setStrokeColor(options.strokeColor)\r\n    }\r\n    if (!isUndefined(options.strokeOpacity)) {\r\n      this.polyline.setStrokeOpacity(options.strokeOpacity)\r\n    }\r\n    if (!isUndefined(options.strokeStyle)) {\r\n      this.polyline.setStrokeStyle(options.strokeStyle)\r\n    }\r\n    if (!isUndefined(options.strokeWeight)) {\r\n      this.polyline.setStrokeWeight(options.strokeWeight)\r\n    }\r\n  }\r\n\r\n  private addListener(polyline: BPolyline, map: BMapInstance) {\r\n    polyline.addEventListener('click', (e: any) => {\r\n      console.log('sfdsfdsfds')\r\n      this.clicked.emit({\r\n        e,\r\n        map,\r\n        polyline\r\n      })\r\n    })\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange\r\n} from '@angular/core'\r\n\r\nimport { isNull, isUndefined } from '../helpers/object'\r\nimport { toPoint } from '../helpers/transformer'\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { MapService } from '../providers/mapService'\r\nimport { BCircle, CircleOptions } from '../types/Circle'\r\nimport { Point } from '../types/Point'\r\n\r\n@Directive({\r\n  selector: 'circle'\r\n})\r\nexport class CircleComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() private center: Point\r\n  @Input() private radius: number\r\n  @Input() private options: CircleOptions\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n\r\n  private circle: BCircle\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  public ngOnInit() {\r\n    nullCheck(this.center, 'center is required for <circle>')\r\n    nullCheck(this.radius, 'center is required for <circle>')\r\n\r\n    this.service\r\n      .addOverlay(() => {\r\n        return (this.circle = new window.BMap.Circle(\r\n          toPoint(this.center),\r\n          this.radius,\r\n          this.options\r\n        ))\r\n      })\r\n      .then(() => {\r\n        this.loaded.emit(this.circle)\r\n      })\r\n  }\r\n\r\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes.center && !changes.center.isFirstChange()) {\r\n      this.circle.setCenter(toPoint(changes.center.currentValue))\r\n    }\r\n    if (changes.radius && !changes.radius.isFirstChange()) {\r\n      this.circle.setRadius(changes.radius.currentValue)\r\n    }\r\n    if (changes.options && !changes.options.isFirstChange()) {\r\n      this.setOptions(changes.options.currentValue)\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeOverlay(this.circle)\r\n  }\r\n\r\n  private setOptions(options: CircleOptions): void {\r\n    if (isNull(options)) {\r\n      return\r\n    }\r\n    if (!isUndefined(options.enableEditing)) {\r\n      if (options.enableEditing) {\r\n        this.circle.enableEditing()\r\n      } else {\r\n        this.circle.disableEditing()\r\n      }\r\n    }\r\n    if (!isUndefined(options.enableMassClear)) {\r\n      if (options.enableEditing) {\r\n        this.circle.enableMassClear()\r\n      } else {\r\n        this.circle.disableMassClear()\r\n      }\r\n    }\r\n    if (!isUndefined(options.strokeColor)) {\r\n      this.circle.setStrokeColor(options.strokeColor)\r\n    }\r\n    if (!isUndefined(options.fillColor)) {\r\n      this.circle.setFillColor(options.fillColor)\r\n    }\r\n    if (!isUndefined(options.strokeOpacity)) {\r\n      this.circle.setStrokeOpacity(options.strokeOpacity)\r\n    }\r\n    if (!isUndefined(options.fillOpacity)) {\r\n      this.circle.setFillOpacity(options.fillOpacity)\r\n    }\r\n    if (!isUndefined(options.strokeStyle)) {\r\n      this.circle.setStrokeStyle(options.strokeStyle)\r\n    }\r\n    if (!isUndefined(options.strokeWeight)) {\r\n      this.circle.setStrokeWeight(options.strokeWeight)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange\r\n} from '@angular/core'\r\n\r\nimport { isNull, isUndefined } from '../helpers/object'\r\nimport { toPoints } from '../helpers/transformer'\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { MapService } from '../providers/mapService'\r\nimport { BPolygon, PolygonOptions } from '../types/Polygon'\r\nimport { Point } from '../types/Point'\r\n\r\n@Directive({\r\n  selector: 'polygon'\r\n})\r\nexport class PolygonComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() private points: Array<Point>\r\n  @Input() private options: PolygonOptions\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n\r\n  private polygon: BPolygon\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  public ngOnInit() {\r\n    nullCheck(this.points, 'points is required for <polygon>')\r\n\r\n    this.service\r\n      .addOverlay(() => {\r\n        return (this.polygon = new window.BMap.Polygon(\r\n          toPoints(this.points),\r\n          this.options\r\n        ))\r\n      })\r\n      .then(() => {\r\n        this.loaded.emit(this.polygon)\r\n      })\r\n  }\r\n\r\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes.points && !changes.points.isFirstChange()) {\r\n      this.polygon.setPath(toPoints(changes.points.currentValue))\r\n    }\r\n    if (changes.options && !changes.options.isFirstChange()) {\r\n      this.setOptions(changes.options.currentValue)\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeOverlay(this.polygon)\r\n  }\r\n\r\n  private setOptions(options: PolygonOptions): void {\r\n    if (isNull(options)) {\r\n      return\r\n    }\r\n    if (!isUndefined(options.enableEditing)) {\r\n      if (options.enableEditing) {\r\n        this.polygon.enableEditing()\r\n      } else {\r\n        this.polygon.disableEditing()\r\n      }\r\n    }\r\n    if (!isUndefined(options.enableMassClear)) {\r\n      if (options.enableEditing) {\r\n        this.polygon.enableMassClear()\r\n      } else {\r\n        this.polygon.disableMassClear()\r\n      }\r\n    }\r\n    if (!isUndefined(options.strokeColor)) {\r\n      this.polygon.setStrokeColor(options.strokeColor)\r\n    }\r\n    if (!isUndefined(options.fillColor)) {\r\n      this.polygon.setFillColor(options.fillColor)\r\n    }\r\n    if (!isUndefined(options.strokeOpacity)) {\r\n      this.polygon.setStrokeOpacity(options.strokeOpacity)\r\n    }\r\n    if (!isUndefined(options.fillOpacity)) {\r\n      this.polygon.setFillOpacity(options.fillOpacity)\r\n    }\r\n    if (!isUndefined(options.strokeStyle)) {\r\n      this.polygon.setStrokeStyle(options.strokeStyle)\r\n    }\r\n    if (!isUndefined(options.strokeWeight)) {\r\n      this.polygon.setStrokeWeight(options.strokeWeight)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange\r\n} from '@angular/core'\r\n\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { MapService } from '../providers/mapService'\r\nimport { BHeatmap, HeatmapOptions, HeatmapData } from '../types/Heatmap'\r\nimport { ScriptLoader } from '../providers/scriptLoader'\r\n\r\nconst LIB_URL = `https://api.map.baidu.com/library/Heatmap/2.0/src/Heatmap_min.js`\r\n\r\n@Directive({\r\n  selector: 'heatmap'\r\n})\r\nexport class HeatmapComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() private dataset: HeatmapData\r\n  @Input() private options: HeatmapOptions\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n\r\n  private heatmap: BHeatmap\r\n\r\n  constructor(\r\n    private service: MapService,\r\n    private scriptLoader: ScriptLoader\r\n  ) {}\r\n\r\n  public ngOnInit() {\r\n    nullCheck(this.dataset, 'dataset is required for <heatmap>')\r\n\r\n    this.service.getNativeMap().then(() => {\r\n      return this.scriptLoader.load(LIB_URL, false, () => {\r\n        this.service\r\n          .addOverlay(() => {\r\n            return (this.heatmap = new window.BMapLib.HeatmapOverlay(\r\n              this.options\r\n            ))\r\n          })\r\n          .then(() => {\r\n            this.loaded.emit(this.heatmap)\r\n            if (this.dataset) {\r\n              this.heatmap.setDataSet(this.dataset)\r\n            }\r\n          })\r\n      })\r\n    })\r\n  }\r\n\r\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes.dataset && !changes.dataset.isFirstChange()) {\r\n      this.heatmap.setDataSet(changes.dataset.currentValue)\r\n    }\r\n    if (changes.options && !changes.options.isFirstChange()) {\r\n      this.heatmap.setOptions(changes.options.currentValue)\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeOverlay(this.heatmap)\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core'\r\n\r\nimport { MapService } from '../providers/mapService'\r\nimport {\r\n  BTileLayer,\r\n  TileLayerOptions,\r\n  GetTilesUrlFunc\r\n} from '../types/TileLayer'\r\nimport { BPixel } from '../types/Pixel'\r\n\r\n@Directive({\r\n  selector: 'tilelayer'\r\n})\r\nexport class TileLayerComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  private getTilesUrl: GetTilesUrlFunc\r\n\r\n  @Input()\r\n  private options: TileLayerOptions\r\n\r\n  @Output()\r\n  private loaded = new EventEmitter()\r\n\r\n  private tilelayer: BTileLayer\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  public ngOnInit() {\r\n    const func = this.getTilesUrl\r\n\r\n    this.service\r\n      .addTileLayer(() => {\r\n        this.tilelayer = new window.BMap.TileLayer(this.options)\r\n\r\n        if (this.getTilesUrl) {\r\n          this.tilelayer.getTilesUrl = (tileCoord: BPixel, zoom: number) => {\r\n            return func(tileCoord, zoom)\r\n          }\r\n        }\r\n        return this.tilelayer\r\n      })\r\n      .then(() => {\r\n        this.loaded.emit(this.tilelayer)\r\n      })\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeTileLayer(this.tilelayer)\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core'\r\n\r\nimport { MapService } from '../providers/mapService'\r\nimport { BTrafficLayer, TrafficLayerOptions } from '../types/TrafficLayer'\r\n\r\n@Directive({\r\n  selector: 'trafficlayer'\r\n})\r\nexport class TrafficLayerComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  private options: TrafficLayerOptions\r\n\r\n  @Output()\r\n  private loaded = new EventEmitter()\r\n\r\n  private trafficlayer: BTrafficLayer\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  public ngOnInit() {\r\n    this.service\r\n      .addTileLayer(() => {\r\n        this.trafficlayer = new window.BMap.TrafficLayer(this.options)\r\n        return this.trafficlayer\r\n      })\r\n      .then(() => {\r\n        this.loaded.emit(this.trafficlayer)\r\n      })\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeTileLayer(this.trafficlayer)\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core'\r\n\r\nimport { MapService } from '../providers/mapService'\r\nimport {\r\n  BCanvasLayer,\r\n  CanvasLayerOptions,\r\n  BCanvasLayerOptions\r\n} from '../types/CanvasLayer'\r\nimport { isNumber } from '../helpers/object'\r\nimport { BMapInstance } from '../types/Map'\r\n\r\n@Directive({\r\n  selector: 'canvaslayer'\r\n})\r\nexport class CanvasLayerComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  private options: CanvasLayerOptions\r\n\r\n  @Output()\r\n  private loaded = new EventEmitter()\r\n\r\n  private canvaslayer: BCanvasLayer\r\n\r\n  constructor(private service: MapService) {}\r\n\r\n  public ngOnInit() {\r\n    this.service\r\n      .addOverlay((map: BMapInstance) => {\r\n        this.canvaslayer = new window.BMap.CanvasLayer(\r\n          this.getOptions(this.options, map)\r\n        )\r\n        return this.canvaslayer\r\n      })\r\n      .then(() => {\r\n        this.loaded.emit(this.canvaslayer)\r\n      })\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.service.removeOverlay(this.canvaslayer)\r\n  }\r\n\r\n  private getOptions(\r\n    options: CanvasLayerOptions,\r\n    map: BMapInstance\r\n  ): BCanvasLayerOptions | undefined {\r\n    if (!options) {\r\n      return\r\n    }\r\n    const opts: BCanvasLayerOptions = {}\r\n\r\n    if (isNumber(options.zIndex)) {\r\n      opts.zIndex = options.zIndex\r\n    }\r\n    if (options.paneName) {\r\n      opts.paneName = options.paneName\r\n    }\r\n    if (options.update) {\r\n      opts.update = function() {\r\n        return options.update(map, this.canvas)\r\n      }\r\n    }\r\n\r\n    return opts\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChange\r\n} from '@angular/core'\r\n\r\nimport { nullCheck } from '../helpers/validate'\r\nimport { isUndefined } from '../helpers/object'\r\nimport {\r\n  toMarkerClustererOptions,\r\n  toPoint,\r\n  toMarkerOptions,\r\n  toTextIconStyle,\r\n  createMarker\r\n} from '../helpers/transformer'\r\nimport { MapService } from '../providers/mapService'\r\nimport {\r\n  MarkerClustererOptions,\r\n  BMarkerClusterer\r\n} from '../types/MarkerClusterer'\r\nimport { ScriptLoader } from '../providers/scriptLoader'\r\nimport { BMapInstance } from '../types/Map'\r\n\r\nconst LIB_URLS = {\r\n  key: 'markerClusterer',\r\n  scripts: [\r\n    'https://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js',\r\n    'https://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js'\r\n  ]\r\n}\r\n\r\n@Directive({\r\n  selector: 'marker-clusterer'\r\n})\r\nexport class MarkerClustererComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() private options: MarkerClustererOptions\r\n\r\n  @Output() private loaded = new EventEmitter()\r\n\r\n  private markerClusterer: BMarkerClusterer\r\n\r\n  constructor(\r\n    private service: MapService,\r\n    private scriptLoader: ScriptLoader\r\n  ) { }\r\n\r\n  public ngOnInit() {\r\n    nullCheck(this.options, 'options is required for <marker-clusterer>')\r\n\r\n    this.service.getNativeMap().then((map: BMapInstance) => {\r\n      return this.scriptLoader.load(LIB_URLS, false, () => {\r\n        this.markerClusterer = new window.BMapLib.MarkerClusterer(\r\n          map,\r\n          toMarkerClustererOptions(this.options)\r\n        )\r\n\r\n        this.loaded.emit(this.markerClusterer)\r\n      })\r\n    })\r\n  }\r\n\r\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes.options && !changes.options.isFirstChange()) {\r\n      this.resetOptions(changes.options.currentValue)\r\n    }\r\n  }\r\n\r\n  private resetOptions(options: MarkerClustererOptions) {\r\n    if (options.markers) {\r\n      this.markerClusterer.clearMarkers()\r\n      this.markerClusterer.addMarkers(\r\n        options.markers.map(\r\n          m =>\r\n            createMarker(m.point, m.options)\r\n        )\r\n      )\r\n    }\r\n    if (!isUndefined(options.girdSize)) {\r\n      this.markerClusterer.setGridSize(options.girdSize)\r\n    }\r\n    if (!isUndefined(options.maxZoom)) {\r\n      this.markerClusterer.setMaxZoom(options.maxZoom)\r\n    }\r\n    if (options.styles) {\r\n      this.markerClusterer.setStyles(\r\n        options.styles.filter(s => s).map(s => toTextIconStyle(s))\r\n      )\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.markerClusterer.clearMarkers()\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core'\r\n\r\nimport { ControlComponent } from './components/control.component'\r\nimport { MapComponent } from './components/map.component'\r\nimport { MarkerComponent } from './components/marker.component'\r\nimport { PolylineComponent } from './components/polyline.component'\r\nimport { CircleComponent } from './components/circle.component'\r\nimport { PolygonComponent } from './components/polygon.component'\r\nimport { HeatmapComponent } from './components/heatmap.component'\r\nimport { TileLayerComponent } from './components/tilelayer.component'\r\nimport { TrafficLayerComponent } from './components/trafficlayer.component'\r\nimport { CanvasLayerComponent } from './components/canvaslayer.component'\r\nimport { MarkerClustererComponent } from './components/markerClusterer.component'\r\nimport {\r\n  LOADING_STATE,\r\n  ScriptLoader,\r\n  ScriptLoaderConfig\r\n} from './providers/scriptLoader'\r\n\r\nimport { BMap } from './types/BMap'\r\nimport { BMapLib } from './types/BMapLib'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MapComponent,\r\n    MarkerComponent,\r\n    ControlComponent,\r\n    PolylineComponent,\r\n    CircleComponent,\r\n    PolygonComponent,\r\n    HeatmapComponent,\r\n    TileLayerComponent,\r\n    TrafficLayerComponent,\r\n    CanvasLayerComponent,\r\n    MarkerClustererComponent\r\n  ],\r\n  exports: [\r\n    MapComponent,\r\n    MarkerComponent,\r\n    ControlComponent,\r\n    PolylineComponent,\r\n    CircleComponent,\r\n    PolygonComponent,\r\n    HeatmapComponent,\r\n    TileLayerComponent,\r\n    TrafficLayerComponent,\r\n    CanvasLayerComponent,\r\n    MarkerClustererComponent\r\n  ]\r\n})\r\nexport class BaiduMapModule {\r\n  public static forRoot(config?: ScriptLoaderConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: BaiduMapModule,\r\n      providers: [\r\n        { provide: ScriptLoaderConfig, useValue: config },\r\n        ScriptLoader\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nexport { BMapInstance, MapOptions, MapTypeEnum } from './types/Map'\r\nexport { BMapType } from './types/MapType'\r\nexport { BProjection } from './types/Projection'\r\nexport { Point } from './types/Point'\r\nexport { BMarker, Marker, MarkerOptions } from './types/Marker'\r\nexport { BPolyline, PolylineOptions } from './types/Polyline'\r\nexport { BCircle, CircleOptions } from './types/Circle'\r\nexport { BPolygon, PolygonOptions } from './types/Polygon'\r\nexport { BHeatmap, HeatmapOptions, HeatmapData } from './types/Heatmap'\r\nexport {\r\n  BTileLayer,\r\n  TileLayerOptions,\r\n  GetTilesUrlFunc as getTilesUrlFunc\r\n} from './types/TileLayer'\r\nexport {\r\n  BTrafficLayer,\r\n  TrafficLayerOptions,\r\n  PredictDate\r\n} from './types/TrafficLayer'\r\nexport { BCanvasLayer, CanvasLayerOptions } from './types/CanvasLayer'\r\nexport {\r\n  BMarkerClusterer,\r\n  MarkerClustererOptions\r\n} from './types/MarkerClusterer'\r\nexport { TextIconStyle } from './types/TextIconOverlay'\r\nexport {\r\n  BControl,\r\n  BNavigationControl,\r\n  BOverviewMapControl,\r\n  BScaleControl,\r\n  BMapTypeControl,\r\n  BGeolocationControl,\r\n  BPanoramaControlControl,\r\n  ControlType,\r\n  ControlAnchor,\r\n  GeolocationControlOptions,\r\n  LengthUnit,\r\n  NavigationControlOptions,\r\n  NavigationControlType,\r\n  OverviewMapControlOptions,\r\n  ScaleControlOptions,\r\n  MapTypeControlOptions,\r\n  MapTypeControlType\r\n} from './types/Control'\r\nexport {\r\n  BInfoWindowConstructor,\r\n  BInfoWindowOptions,\r\n  BInfoWindow\r\n} from './types/InfoWindow'\r\nexport { Animation } from './types/Animation'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    _scriptLoadState: { [url: string]: LOADING_STATE }\r\n    _loadingCallbacks: { [url: string]: Array<() => void> }\r\n    BMap: BMap\r\n    BMapLib: BMapLib\r\n    baidumapinit: () => void\r\n    BMAP_PERSPECTIVE_MAP: any\r\n  }\r\n}\r\n"]}